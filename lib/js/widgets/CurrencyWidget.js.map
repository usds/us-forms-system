{"version":3,"sources":["../../../src/js/widgets/CurrencyWidget.jsx"],"names":["CurrencyWidget","props","onBlur","id","handleChange","event","val","target","value","onChange","test","parsed","parseFloat","replace","isNaN","setState","toFixed","state","disabled","options","autocomplete","widgetClassNames","React","Component","propTypes","PropTypes","shape","string","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,c;;;AACnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACXA,KADW;;AAAA,UAWnBC,MAXmB,GAWV,YAAM;AACb,YAAKD,KAAL,CAAWC,MAAX,CAAkB,MAAKD,KAAL,CAAWE,EAA7B;AACD,KAbkB;;AAAA,UAenBC,YAfmB,GAeJ,UAACC,KAAD,EAAW;AACxB,UAAMC,MAAMD,MAAME,MAAN,CAAaC,KAAzB;AACA,UAAIF,QAAQ,EAAR,IAAc,OAAOA,GAAP,KAAe,WAAjC,EAA8C;AAC5C,cAAKL,KAAL,CAAWQ,QAAX;AACD,OAFD,MAEO;AACL;AACA,YAAI,CAAC,+BAA+BC,IAA/B,CAAoCJ,GAApC,CAAL,EAA+C;AAC7C,gBAAKL,KAAL,CAAWQ,QAAX,CAAoBH,GAApB;AACD,SAFD,MAEO;AACL;AACA,cAAMK,SAASC,WAAWN,IAAIO,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAX,CAAf;AACA,cAAI,CAACC,MAAMH,MAAN,CAAL,EAAoB;AAClB,kBAAKV,KAAL,CAAWQ,QAAX,CAAoBE,MAApB;AACD,WAFD,MAEO;AACL,kBAAKV,KAAL,CAAWQ,QAAX,CAAoBH,GAApB;AACD;AACF;AACF;AACD,YAAKS,QAAL,CAAc,EAAEP,OAAOF,GAAT,EAAd;AACD,KAlCkB;;AAEjB,QAAIE,QAAQP,MAAMO,KAAlB;AACA,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,cAAQA,MAAMQ,OAAN,CAAc,CAAd,CAAR;AACD;AACD,UAAKC,KAAL,GAAa;AACXT;AADW,KAAb;AANiB;AASlB;;;;6BA2BQ;AAAA,mBAC2B,KAAKP,KADhC;AAAA,UACCE,EADD,UACCA,EADD;AAAA,UACKe,QADL,UACKA,QADL;AAAA,UACeC,OADf,UACeA,OADf;;AAEP,UAAMX,QAAQ,KAAKS,KAAL,CAAWT,KAAzB;;AAEA,aACE;AACE,sBAAcW,QAAQC,YADxB;AAEE,cAAK,MAFP;AAGE,YAAIjB,EAHN;AAIE,cAAMA,EAJR;AAKE,kBAAUe,QALZ;AAME,mBAAW,0BAAW,KAAKjB,KAAL,CAAWkB,OAAX,CAAmBE,gBAA9B,CANb;AAOE,eAAO,OAAOb,KAAP,KAAiB,WAAjB,GAA+B,EAA/B,GAAoCA,KAP7C;AAQE,gBAAQ,KAAKN,MARf;AASE,kBAAU,KAAKE,YATjB,GADF;AAYD;;;;EArDyCkB,gBAAMC,S;;kBAA7BvB,c;;;AAwDrBA,eAAewB,SAAf,GAA2B;AACzB;;;AAGAL,WAASM,oBAAUC,KAAV,CAAgB;AACvB;;;AAGAN,kBAAcK,oBAAUE;AAJD,GAAhB;AAJgB,CAA3B;;AAYA3B,eAAe4B,YAAf,GAA8B;AAC5BT,WAAS;AADmB,CAA9B","file":"CurrencyWidget.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport default class CurrencyWidget extends React.Component {\n  constructor(props) {\n    super(props);\n    let value = props.value;\n    if (typeof value === 'number') {\n      value = value.toFixed(2);\n    }\n    this.state = {\n      value\n    };\n  }\n\n  onBlur = () => {\n    this.props.onBlur(this.props.id);\n  }\n\n  handleChange = (event) => {\n    const val = event.target.value;\n    if (val === '' || typeof val === 'undefined') {\n      this.props.onChange();\n    } else {\n      // Needs to look like a currency\n      if (!/^\\${0,1}[0-9,]*(\\.\\d{1,2})?$/.test(val)) {\n        this.props.onChange(val);\n      } else {\n        // Needs to parse as a number\n        const parsed = parseFloat(val.replace(/[^0-9.]/g, ''));\n        if (!isNaN(parsed)) {\n          this.props.onChange(parsed);\n        } else {\n          this.props.onChange(val);\n        }\n      }\n    }\n    this.setState({ value: val });\n  }\n\n  render() {\n    const { id, disabled, options } = this.props;\n    const value = this.state.value;\n\n    return (\n      <input\n        autoComplete={options.autocomplete}\n        type=\"text\"\n        id={id}\n        name={id}\n        disabled={disabled}\n        className={classnames(this.props.options.widgetClassNames)}\n        value={typeof value === 'undefined' ? '' : value}\n        onBlur={this.onBlur}\n        onChange={this.handleChange}/>\n    );\n  }\n}\n\nCurrencyWidget.propTypes = {\n  /**\n   * ui:options from uiSchema\n   */\n  options: PropTypes.shape({\n    /*\n    * input's autocomplete attribute value\n    */\n    autocomplete: PropTypes.string\n  }),\n};\n\nCurrencyWidget.defaultProps = {\n  options: {}\n};\n"]}