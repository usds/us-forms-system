{"version":3,"sources":["../../../src/js/definitions/file.js"],"names":["fileUiSchema","label","userOptions","FileField","fileTypes","maxSize","minSize","createPayload","file","formId","payload","FormData","append","parseResponse","fileInfo","name","data","attributes","size","confirmationCode","addAnotherLabel","showFieldLabel","keepInPageOnReview","classNames","required","minItems","validateFileField","fileSchema","type","items","properties","fileName","fileSize","confirmationNumber","errorMessage","uploading"],"mappings":";;;;;;;;;;;kBAKwBA,Y;;AAHxB;;;;AACA;;;;AAEe,SAASA,YAAT,CAAsBC,KAAtB,EAA+C;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;;AAC5D,SAAO;AACL,gBAAYD,KADP;AAEL,gBAAYE,mBAFP;AAGL,kBAAc,sBAAS;AACrBC,iBAAW,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,CADU;AAErBC,eAAS,QAFY;AAGrBC,eAAS,IAHY;AAIrBC,qBAAe,uBAACC,IAAD,EAAOC,MAAP,EAAkB;AAC/B,YAAMC,UAAU,IAAIC,QAAJ,EAAhB;AACAD,gBAAQE,MAAR,CAAe,MAAf,EAAuBJ,IAAvB;AACAE,gBAAQE,MAAR,CAAe,SAAf,EAA0BH,MAA1B;;AAEA,eAAOC,OAAP;AACD,OAVoB;AAWrBG,qBAAe,uBAACC,QAAD,EAAc;AAC3B,eAAO;AACLC,gBAAMD,SAASE,IAAT,CAAcC,UAAd,CAAyBF,IAD1B;AAELG,gBAAMJ,SAASE,IAAT,CAAcC,UAAd,CAAyBC,IAF1B;AAGLC,4BAAkBL,SAASE,IAAT,CAAcC,UAAd,CAAyBE;AAHtC,SAAP;AAKD,OAjBoB;AAkBrBC,uBAAiB,aAlBI;AAmBrBC,sBAAgB,IAnBK;AAoBrBC,0BAAoB,IApBC;AAqBrBC,kBAAY;AArBS,KAAT,EAsBXrB,WAtBW,CAHT;AA0BL,wBAAoB;AAClBsB,gBAAU,wBADQ;AAElBC,gBAAU;AAFQ,KA1Bf;AA8BL,sBAAkB,CAChBC,6BADgB;AA9Bb,GAAP;AAkCD;;AAED;AACO,IAAMC,kCAAa;AACxBC,QAAM,OADkB;AAExBH,YAAU,CAFc;AAGxBI,SAAO;AACLD,UAAM,QADD;AAELE,gBAAY;AACVC,gBAAU;AACRH,cAAM;AADE,OADA;AAIVI,gBAAU;AACRJ,cAAM;AADE,OAJA;AAOVK,0BAAoB;AAClBL,cAAM;AADY,OAPV;AAUVM,oBAAc;AACZN,cAAM;AADM,OAVJ;AAaVO,iBAAW;AACTP,cAAM;AADG;AAbD;AAFP;AAHiB,CAAnB","file":"file.js","sourcesContent":["import _ from 'lodash/fp';\n\nimport FileField from '../fields/FileField';\nimport { validateFileField } from '../validation';\n\nexport default function fileUiSchema(label, userOptions = {}) {\n  return {\n    'ui:title': label,\n    'ui:field': FileField,\n    'ui:options': _.assign({\n      fileTypes: ['pdf', 'jpg', 'jpeg', 'png'],\n      maxSize: 20971520,\n      minSize: 1024,\n      createPayload: (file, formId) => {\n        const payload = new FormData();\n        payload.append('file', file);\n        payload.append('form_id', formId);\n\n        return payload;\n      },\n      parseResponse: (fileInfo) => {\n        return {\n          name: fileInfo.data.attributes.name,\n          size: fileInfo.data.attributes.size,\n          confirmationCode: fileInfo.data.attributes.confirmationCode\n        };\n      },\n      addAnotherLabel: 'Add Another',\n      showFieldLabel: true,\n      keepInPageOnReview: true,\n      classNames: 'schemaform-file-upload'\n    }, userOptions),\n    'ui:errorMessages': {\n      required: 'You must upload a file',\n      minItems: 'You must upload a file'\n    },\n    'ui:validations': [\n      validateFileField\n    ]\n  };\n}\n\n// An example schema so we donâ€™t forget it for now\nexport const fileSchema = {\n  type: 'array',\n  minItems: 1,\n  items: {\n    type: 'object',\n    properties: {\n      fileName: {\n        type: 'string'\n      },\n      fileSize: {\n        type: 'integer'\n      },\n      confirmationNumber: {\n        type: 'string'\n      },\n      errorMessage: {\n        type: 'string'\n      },\n      uploading: {\n        type: 'boolean'\n      }\n    }\n  }\n};\n"]}