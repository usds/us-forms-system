{"version":3,"sources":["../../../src/js/definitions/file.js"],"names":["schema","type","items","properties","name","size","confirmationCode","uiSchema","label","userOptions","FileField","fileTypes","maxSize","minSize","createPayload","file","formId","payload","FormData","append","parseResponse","fileInfo","data","attributes","addAnotherLabel","showFieldLabel","keepInPageOnReview","classNames","required","minItems","validateFileField","fileConfig"],"mappings":";;;;;;;;;;;AAEA;;;;AACA;;;;AAEA,SAASA,MAAT,GAAkB;AAChB,SAAO;AACLC,UAAM,OADD;AAELC,WAAO;AACLD,YAAM,QADD;AAELE,kBAAY;AACVC,cAAM;AACJH,gBAAM;AADF,SADI;AAIVI,cAAM;AACJJ,gBAAM;AADF,SAJI;AAOVK,0BAAkB;AAChBL,gBAAM;AADU;AAPR;AAFP;AAFF,GAAP;AAiBD;;AAED,SAASM,QAAT,CAAkBC,KAAlB,EAA2C;AAAA,MAAlBC,WAAkB,uEAAJ,EAAI;;AACzC,SAAO;AACL,gBAAYD,KADP;AAEL,gBAAYE,mBAFP;AAGL,kBAAc,sBAAS;AACrBC,iBAAW,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,CADU;AAErBC,eAAS,QAFY;AAGrBC,eAAS,IAHY;AAIrBC,qBAAe,uBAACC,IAAD,EAAOC,MAAP,EAAkB;AAC/B,YAAMC,UAAU,IAAIC,QAAJ,EAAhB;AACAD,gBAAQE,MAAR,CAAe,MAAf,EAAuBJ,IAAvB;AACAE,gBAAQE,MAAR,CAAe,SAAf,EAA0BH,MAA1B;;AAEA,eAAOC,OAAP;AACD,OAVoB;AAWrBG,qBAAe,uBAACC,QAAD,EAAc;AAC3B,eAAO;AACLjB,gBAAMiB,SAASC,IAAT,CAAcC,UAAd,CAAyBnB,IAD1B;AAELC,gBAAMgB,SAASC,IAAT,CAAcC,UAAd,CAAyBlB,IAF1B;AAGLC,4BAAkBe,SAASC,IAAT,CAAcC,UAAd,CAAyBjB;AAHtC,SAAP;AAKD,OAjBoB;AAkBrBkB,uBAAiB,aAlBI;AAmBrBC,sBAAgB,IAnBK;AAoBrBC,0BAAoB,IApBC;AAqBrBC,kBAAY;AArBS,KAAT,EAsBXlB,WAtBW,CAHT;AA0BL,wBAAoB;AAClBmB,gBAAU,wBADQ;AAElBC,gBAAU;AAFQ,KA1Bf;AA8BL,sBAAkB,CAChBC,6BADgB;AA9Bb,GAAP;AAkCD;;AAEM,IAAMC,kCAAa;AACxB/B,gBADwB;AAExBO;AAFwB,CAAnB","file":"file.js","sourcesContent":["import _ from 'lodash/fp';\n\nimport FileField from '../fields/FileField';\nimport { validateFileField } from '../validation';\n\nfunction schema() {\n  return {\n    type: 'array',\n    items: {\n      type: 'object',\n      properties: {\n        name: {\n          type: 'string'\n        },\n        size: {\n          type: 'integer'\n        },\n        confirmationCode: {\n          type: 'string'\n        }\n      }\n    }\n  };\n}\n\nfunction uiSchema(label, userOptions = {}) {\n  return {\n    'ui:title': label,\n    'ui:field': FileField,\n    'ui:options': _.assign({\n      fileTypes: ['pdf', 'jpg', 'jpeg', 'png'],\n      maxSize: 20971520,\n      minSize: 1024,\n      createPayload: (file, formId) => {\n        const payload = new FormData();\n        payload.append('file', file);\n        payload.append('form_id', formId);\n\n        return payload;\n      },\n      parseResponse: (fileInfo) => {\n        return {\n          name: fileInfo.data.attributes.name,\n          size: fileInfo.data.attributes.size,\n          confirmationCode: fileInfo.data.attributes.confirmationCode\n        };\n      },\n      addAnotherLabel: 'Add Another',\n      showFieldLabel: true,\n      keepInPageOnReview: true,\n      classNames: 'schemaform-file-upload'\n    }, userOptions),\n    'ui:errorMessages': {\n      required: 'You must upload a file',\n      minItems: 'You must upload a file'\n    },\n    'ui:validations': [\n      validateFileField\n    ]\n  };\n}\n\nexport const fileConfig = {\n  schema,\n  uiSchema\n};\n"]}