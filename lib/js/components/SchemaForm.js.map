{"version":3,"sources":["../../../src/js/components/SchemaForm.jsx"],"names":["reviewWidgets","SchemaForm","props","validate","bind","onError","getEmptyState","transformErrors","onBlur","setTouched","state","fields","ObjectField","ArrayField","BasicArrayField","TitleField","reviewFields","ReviewObjectField","ReadOnlyArrayField","address","StringField","newProps","name","pagePerItemIndex","setState","title","formContext","reviewMode","nextProps","nextState","editModeOnReviewPage","schema","uiSchema","Object","keys","properties","every","data","objProp","id","touched","onEdit","hideTitle","reviewTitle","uploadFile","hideHeaderRow","assign","submitted","pageTitle","touchedItem","setStateCallback","errors","formData","children","onSubmit","onChange","safeRenderCompletion","useReviewMode","ReviewFieldTemplate","FieldTemplate","widgets","React","Component","propTypes","PropTypes","string","isRequired","oneOfType","func","object","any","bool"],"mappings":"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","file":"SchemaForm.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport _ from 'lodash/fp';\nimport Form from '@department-of-veterans-affairs/react-jsonschema-form';\nimport { deepEquals } from '@department-of-veterans-affairs/react-jsonschema-form/lib/utils';\n\nimport { uiSchemaValidate, transformErrors } from '../validation';\nimport FieldTemplate from './FieldTemplate';\nimport * as reviewWidgets from '../review/widgets';\nimport ReviewFieldTemplate from '../review/ReviewFieldTemplate';\nimport StringField from '../review/StringField';\nimport widgets from '../widgets/index';\nimport ObjectField from '../fields/ObjectField';\nimport ArrayField from '../fields/ArrayField';\nimport ReadOnlyArrayField from '../review/ReadOnlyArrayField';\nimport BasicArrayField from '../fields/BasicArrayField';\nimport TitleField from '../fields/TitleField';\nimport ReviewObjectField from '../review/ObjectField';\nimport { scrollToFirstError } from '../utilities/ui';\n\n/*\n * Each page uses this component and passes in config. This is where most of the page level\n * form logic should live.\n */\nclass SchemaForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.validate = this.validate.bind(this);\n    this.onError = this.onError.bind(this);\n    this.getEmptyState = this.getEmptyState.bind(this);\n    this.transformErrors = this.transformErrors.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.setTouched = this.setTouched.bind(this);\n    this.state = this.getEmptyState(props);\n    this.fields = {\n      ObjectField,\n      ArrayField,\n      BasicArrayField,\n      TitleField\n    };\n\n    this.reviewFields = {\n      ObjectField: ReviewObjectField,\n      ArrayField: ReadOnlyArrayField,\n      BasicArrayField,\n      address: ReviewObjectField,\n      StringField\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.name !== this.props.name || newProps.pagePerItemIndex !== this.props.pagePerItemIndex) {\n      this.setState(this.getEmptyState(newProps));\n    } else if (newProps.title !== this.props.title) {\n      this.setState({ formContext: _.set('pageTitle', newProps.title, this.state.formContext) });\n    } else if (!!newProps.reviewMode !== !!this.state.formContext.reviewMode) {\n      this.setState(this.getEmptyState(newProps));\n    } else if (newProps.formContext !== this.props.formContext) {\n      this.setState(this.getEmptyState(newProps));\n    }\n  }\n\n  /*\n   * If we’re in review mode, we can short circuit updating\n   * by making sure the schemas are the same and the data\n   * displayed on this particular page hasn’t changed\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    if ((nextProps.reviewMode && !nextProps.editModeOnReviewPage)\n      && nextProps.reviewMode === this.props.reviewMode\n      && deepEquals(this.state, nextState)\n      && nextProps.schema === this.props.schema\n      && typeof nextProps.title !== 'function'\n      && nextProps.uiSchema === this.props.uiSchema) {\n      return !Object.keys(nextProps.schema.properties).every(objProp => {\n        return this.props.data[objProp] === nextProps.data[objProp];\n      });\n    }\n\n    return true;\n  }\n\n  onError() {\n    const formContext = _.set('submitted', true, this.state.formContext);\n    this.setState({ formContext });\n    scrollToFirstError();\n  }\n\n  onBlur(id) {\n    if (!this.state.formContext.touched[id]) {\n      const formContext = _.set(['touched', id], true, this.state.formContext);\n      this.setState({ formContext });\n    }\n  }\n\n  getEmptyState(props) {\n    const { onEdit, hideTitle, title, reviewMode, reviewTitle, pagePerItemIndex, uploadFile, hideHeaderRow, formContext } = props;\n    return {\n      formContext: Object.assign({\n        touched: {},\n        submitted: false,\n        onEdit,\n        hideTitle,\n        setTouched: this.setTouched,\n        reviewTitle,\n        pageTitle: title,\n        pagePerItemIndex,\n        reviewMode,\n        hideHeaderRow,\n        uploadFile,\n        onError: this.onError\n      }, formContext)\n    };\n  }\n\n  setTouched(touchedItem, setStateCallback) {\n    const touched = _.merge(this.state.formContext.touched, touchedItem);\n    const formContext = _.set('touched', touched, this.state.formContext);\n    this.setState({ formContext }, setStateCallback);\n  }\n\n  /*\n   * This gets the list of JSON Schema errors whenever validation\n   * is run\n   */\n  transformErrors(errors) {\n    return transformErrors(errors, this.props.uiSchema);\n  }\n\n  validate(formData, errors) {\n    const { schema, uiSchema } = this.props;\n    if (uiSchema) {\n      uiSchemaValidate(errors, uiSchema, schema, formData);\n    }\n    return errors;\n  }\n\n  render() {\n    const {\n      data,\n      schema,\n      uiSchema,\n      reviewMode,\n      editModeOnReviewPage,\n      children,\n      onSubmit,\n      onChange,\n      safeRenderCompletion\n    } = this.props;\n\n    const useReviewMode = reviewMode && !editModeOnReviewPage;\n\n    return (\n      <div>\n        <Form\n          safeRenderCompletion={safeRenderCompletion}\n          FieldTemplate={useReviewMode ? ReviewFieldTemplate : FieldTemplate}\n          formContext={this.state.formContext}\n          liveValidate\n          noHtml5Validate\n          onError={this.onError}\n          onBlur={this.onBlur}\n          onChange={({ formData }) => onChange(formData)}\n          onSubmit={onSubmit}\n          schema={schema}\n          uiSchema={uiSchema}\n          validate={_.once(this.validate)}\n          showErrorList={false}\n          formData={data}\n          widgets={useReviewMode ? reviewWidgets : widgets}\n          fields={useReviewMode ? this.reviewFields : this.fields}\n          transformErrors={this.transformErrors}>\n          {children}\n        </Form>\n      </div>\n    );\n  }\n}\n\nSchemaForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  title: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func\n  ]).isRequired,\n  schema: PropTypes.object.isRequired,\n  uiSchema: PropTypes.object.isRequired,\n  data: PropTypes.any,\n  reviewMode: PropTypes.bool,\n  editModeOnReviewPage: PropTypes.bool,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  hideTitle: PropTypes.bool\n};\n\nexport default SchemaForm;\n"]}