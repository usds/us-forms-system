{"version":3,"sources":["../../src/js/helpers.js"],"names":["isActivePage","getActivePages","getActiveProperties","getInactivePages","createFormPageList","createPageListByChapter","createPageList","createRoutes","formatISOPartialDate","formatReviewDate","parseISODate","filterViewFields","filterInactivePages","stringifyFormReplacer","isInProgress","transformForSubmit","getArrayFields","hasFieldsOtherThanArray","getNonArraySchema","checkValidSchema","setArrayRecordTouched","createUSAStateLabels","expandArrayPages","getPageKeys","getActiveChapters","omitRequired","recordEvent","page","data","depends","index","Array","isArray","some","condition","undefined","pages","filter","activePages","allProperties","map","schema","Object","keys","properties","formConfig","chapters","reduce","pageList","chapter","chapterTitle","title","chapterKey","pageKey","concat","formPages","introduction","path","urlPrefix","routes","component","FormPage","pageConfig","ReviewPage","confirmation","onEnter","nextState","replace","formatDayMonth","val","dayOrMonth","toString","Number","length","formatYear","month","day","year","dateString","monthYear","split","newData","nextProp","field","newArray","item","startsWith","inactivePages","form","activeProperties","formData","currentData","prop","includes","key","value","country","street","city","postalCode","zipcode","fields","every","widget","id","confirmationCode","file","newValues","v","pathName","trimmedPathname","endsWith","replacer","withoutInactivePages","withoutViewFields","JSON","stringify","isHiddenField","findArrays","obj","ui","type","push","definitions","uiSchema","forEach","$ref","newProperties","current","next","newSchema","required","newRequired","pureWithDeepEquals","props","nextProps","errors","join","propName","items","additionalItems","Error","prefix","states","USA","label","generateArrayPages","arrayPages","arrayPath","itemFilter","result","acc","nextPage","lastArrayPath","currentList","showPagePerItem","newList","eligiblePageList","expandedPageList","p","window","dataLayer"],"mappings":"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","file":"helpers.js","sourcesContent":["import _ from 'lodash/fp';\nimport shouldUpdate from 'recompose/shouldUpdate';\nimport { deepEquals } from '@department-of-veterans-affairs/react-jsonschema-form/lib/utils';\n\nimport FormPage from './containers/FormPage';\nimport ReviewPage from './review/ReviewPage';\n\n// An active page is one that will be shown to the user.\n// Pages become inactive if they are conditionally shown based\n// on answers to previous questions.\nexport function isActivePage(page, data) {\n  if (typeof page.depends === 'function') {\n    return page.depends(data, page.index);\n  }\n\n  if (Array.isArray(page.depends)) {\n    return page.depends.some(condition => _.matches(condition)(data));\n  }\n\n  return page.depends === undefined || _.matches(page.depends)(data);\n}\n\nexport function getActivePages(pages, data) {\n  return pages.filter(page => isActivePage(page, data));\n}\n\nexport function getActiveProperties(activePages) {\n  let allProperties = [];\n  activePages.map(page => {\n    if (page.schema) {\n      allProperties = _.uniq(_.concat(Object.keys(page.schema.properties), allProperties));\n    }\n    return allProperties;\n  });\n\n  return allProperties;\n}\n\nexport function getInactivePages(pages, data) {\n  return pages.filter(page => !isActivePage(page, data));\n}\n\nexport function createFormPageList(formConfig) {\n  return Object.keys(formConfig.chapters)\n    .reduce((pageList, chapter) => {\n      const chapterTitle = formConfig.chapters[chapter].title;\n      const pages = Object.keys(formConfig.chapters[chapter].pages)\n        .map(page => {\n          return _.assign(formConfig.chapters[chapter].pages[page], {\n            chapterTitle,\n            chapterKey: chapter,\n            pageKey: page\n          });\n        });\n      return pageList.concat(pages);\n    }, []);\n}\n\nexport function createPageListByChapter(formConfig) {\n  return Object.keys(formConfig.chapters)\n    .reduce((chapters, chapter) => {\n      const pages = Object.keys(formConfig.chapters[chapter].pages)\n        .map(page => {\n          return _.assign(formConfig.chapters[chapter].pages[page], {\n            pageKey: page,\n            chapterKey: chapter\n          });\n        });\n      return _.set(chapter, pages, chapters);\n    }, {});\n}\n\nexport function createPageList(formConfig, formPages) {\n  let pageList = formPages;\n  if (formConfig.introduction) {\n    pageList = [\n      {\n        pageKey: 'introduction',\n        path: 'introduction'\n      }\n    ].concat(pageList);\n  }\n\n  return pageList\n    .concat([\n      {\n        pageKey: 'review-and-submit',\n        path: 'review-and-submit',\n        chapterKey: 'review'\n      }\n    ])\n    .map(page => {\n      return _.set('path', `${formConfig.urlPrefix || ''}${page.path}`, page);\n    });\n}\n\n/*\n * Create the routes based on a form config. This goes through each chapter in a form\n * config, pulls out the config for each page, then generates a list of Route components with the\n * config as props\n */\nexport function createRoutes(formConfig) {\n  const formPages = createFormPageList(formConfig);\n  const pageList = createPageList(formConfig, formPages);\n  let routes = formPages\n    .map(page => {\n      return {\n        path: page.path,\n        component: page.component || FormPage,\n        pageConfig: page,\n        pageList,\n        urlPrefix: formConfig.urlPrefix\n      };\n    });\n  if (formConfig.introduction) {\n    routes = [\n      {\n        path: 'introduction',\n        component: formConfig.introduction,\n        formConfig,\n        pageList\n      }\n    ].concat(routes);\n  }\n\n  return routes.concat([\n    {\n      path: 'review-and-submit',\n      formConfig,\n      component: ReviewPage,\n      pageList\n    },\n    {\n      path: 'confirmation',\n      component: formConfig.confirmation\n    },\n    {\n      path: '*',\n      onEnter: (nextState, replace) => replace(formConfig.urlPrefix || '/')\n    }\n  ]);\n}\n\nfunction formatDayMonth(val) {\n  if (val) {\n    const dayOrMonth = val.toString();\n    if (Number(dayOrMonth) && dayOrMonth.length === 1) {\n      return `0${val}`;\n    } else if (Number(dayOrMonth)) {\n      return dayOrMonth;\n    }\n  }\n\n  return 'XX';\n}\n\nfunction formatYear(val) {\n  if (!val || !val.length) {\n    return 'XXXX';\n  }\n\n  return val;\n}\n\nexport function formatISOPartialDate({ month, day, year }) {\n  if (month || day || year) {\n    return `${formatYear(year)}-${formatDayMonth(month)}-${formatDayMonth(day)}`;\n  }\n\n  return undefined;\n}\n\nexport function formatReviewDate(dateString, monthYear = false) {\n  if (dateString) {\n    const [year, month, day] = dateString.split('-', 3);\n\n    return monthYear\n      ? `${formatDayMonth(month)}/${formatYear(year)}`\n      : `${formatDayMonth(month)}/${formatDayMonth(day)}/${formatYear(year)}`;\n  }\n\n  return undefined;\n}\nexport function parseISODate(dateString) {\n  if (typeof dateString === 'string') {\n    const [year, month, day] = dateString.split('-', 3);\n\n    return {\n      month: month === 'XX' ? '' : Number(month).toString(),\n      day: day === 'XX' ? '' : Number(day).toString(),\n      year: year === 'XXXX' ? '' : year\n    };\n  }\n\n  return {\n    month: '',\n    day: '',\n    year: ''\n  };\n}\n\n/*\n * Removes 'view:' fields from data object\n */\nexport function filterViewFields(data) {\n  return Object.keys(data).reduce((newData, nextProp) => {\n    const field = data[nextProp];\n\n    if (Array.isArray(field)) {\n      const newArray = field.map((item) => filterViewFields(item));\n\n      return _.set(nextProp, newArray, newData);\n    }\n\n    if (typeof field === 'object') {\n      if (nextProp.startsWith('view:')) {\n        return _.assign(newData, filterViewFields(field));\n      }\n      return _.set(nextProp, filterViewFields(field), newData);\n    }\n\n    if (!nextProp.startsWith('view:')) {\n      return _.set(nextProp, field, newData);\n    }\n\n    return newData;\n  }, {});\n}\n\nexport function filterInactivePages(inactivePages, activePages, form) {\n  const activeProperties = getActiveProperties(activePages);\n  let newData;\n\n  return inactivePages.reduce((formData, page) => {\n    return Object.keys(page.schema.properties)\n      .reduce((currentData, prop) => {\n        if (!activeProperties.includes(prop)) {\n          newData = _.unset(prop, currentData);\n        }\n        return newData;\n      }, formData);\n  }, form.data);\n}\n\nexport function stringifyFormReplacer(key, value) {\n  // an object with country is an address\n  if (value && typeof value.country !== 'undefined' &&\n    (!value.street || !value.city || (!value.postalCode && !value.zipcode))) {\n    return undefined;\n  }\n\n  // clean up empty objects, which we have no reason to send\n  if (typeof value === 'object') {\n    const fields = Object.keys(value);\n    if (fields.length === 0 || fields.every(field => value[field] === undefined)) {\n      return undefined;\n    }\n\n    // autosuggest widgets save value and label info, but we should just return the value\n    if (value.widget === 'autosuggest') {\n      return value.id;\n    }\n\n    // Exclude file data\n    if (value.confirmationCode && value.file) {\n      return _.omit('file', value);\n    }\n  }\n\n  // Clean up empty objects in arrays\n  if (Array.isArray(value)) {\n    const newValues = value.filter(v => !!stringifyFormReplacer(key, v));\n    // If every item in the array is cleared, remove the whole array\n    return newValues.length > 0 ? newValues : undefined;\n  }\n\n  return value;\n}\n\nexport function isInProgress(pathName) {\n  const trimmedPathname = pathName.replace(/\\/$/, '');\n  return !(\n    trimmedPathname.endsWith('introduction')\n    || trimmedPathname.endsWith('confirmation')\n    || trimmedPathname.endsWith('form-saved')\n    || trimmedPathname.endsWith('error')\n  );\n}\n\n/*\n * Normal transform for schemaform data\n */\nexport function transformForSubmit(formConfig, form, replacer = stringifyFormReplacer) {\n  const activePages = getActivePages(createFormPageList(formConfig), form.data);\n  const inactivePages = getInactivePages(createFormPageList(formConfig), form.data);\n  const withoutInactivePages = filterInactivePages(inactivePages, activePages, form);\n  const withoutViewFields = filterViewFields(withoutInactivePages);\n\n  return JSON.stringify(withoutViewFields, replacer) || '{}';\n}\n\nfunction isHiddenField(schema) {\n  return !!schema['ui:collapsed'] || !!schema['ui:hidden'];\n}\n\n/*\n * Pull the array fields from a schema. Used to separate out array fields\n * from the rest of page to be displayed on the review page\n */\nexport function getArrayFields(data) {\n  const fields = [];\n  const findArrays = (obj, ui, path = []) => {\n    if (obj.type === 'array' && !isHiddenField(obj) && !_.get('ui:options.keepInPageOnReview', ui)) {\n      fields.push({\n        path,\n        schema: _.set('definitions', data.schema.definitions, obj),\n        uiSchema: _.get(path, data.uiSchema) || data.uiSchema\n      });\n    }\n\n    if (obj.type === 'object' && !isHiddenField(obj)) {\n      Object.keys(obj.properties).forEach(prop => {\n        findArrays(obj.properties[prop], ui[prop], path.concat(prop));\n      });\n    }\n  };\n\n  findArrays(data.schema, data.uiSchema);\n\n  return fields;\n}\n\n/*\n * Checks to see if there are non array fields in a page schema, so that\n * we don’t show a blank page header on the review page if a page is just\n * a growable table\n */\nexport function hasFieldsOtherThanArray(schema) {\n  if (schema.$ref || (schema.type !== 'object' && schema.type !== 'array')) {\n    return true;\n  }\n\n  if (schema.type === 'object') {\n    return Object.keys(schema.properties).some(nextProp => {\n      return hasFieldsOtherThanArray(schema.properties[nextProp]);\n    });\n  }\n\n  return false;\n}\n\n/*\n * Return a schema without array fields. If the schema has only array fields,\n * then return undefined (because there’s no reason to use an object schema with\n * no properties)\n */\nexport function getNonArraySchema(schema, uiSchema = {}) {\n  if (schema.type === 'array' && !_.get('ui:options.keepInPageOnReview', uiSchema)) {\n    return undefined;\n  }\n\n  if (schema.type === 'object') {\n    const newProperties = Object.keys(schema.properties).reduce((current, next) => {\n      const newSchema = getNonArraySchema(schema.properties[next], uiSchema[next]);\n\n      if (typeof newSchema === 'undefined') {\n        return _.unset(next, current);\n      }\n\n      if (newSchema !== schema.properties[next]) {\n        return _.set(next, newSchema, current);\n      }\n\n      return current;\n    }, schema.properties);\n\n    if (Object.keys(newProperties).length === 0) {\n      return undefined;\n    }\n\n    if (newProperties !== schema.properties) {\n      let newSchema = _.set('properties', newProperties, schema);\n      if (newSchema.required) {\n        const newRequired = _.intersection(Object.keys(newSchema.properties), newSchema.required);\n        if (newRequired.length !== newSchema.required.length) {\n          newSchema = _.set('required', newRequired, newSchema);\n        }\n      }\n\n      return newSchema;\n    }\n  }\n\n  return schema;\n}\n\n\nexport const pureWithDeepEquals = shouldUpdate((props, nextProps) => {\n  return !deepEquals(props, nextProps);\n});\n\n/**\n * Recursively checks to see if the schema is valid.\n *\n * Note: This only returns true. If the schema is invalid, an error is thrown to\n *  stop everything.\n *\n * @param {Object} schema - The schema in question\n * @return {bool}         - true if we succeed\n * @throws {Error}        - If the schema is invalid\n */\nexport function checkValidSchema(schema, errors = [], path = ['root']) {\n  if (typeof schema.type !== 'string') {\n    errors.push(`Missing type in ${path.join('.')} schema.`);\n  }\n\n  if (schema.type === 'object') {\n    if (typeof schema.properties !== 'object') {\n      errors.push(`Missing object properties in ${path.join('.')} schema.`);\n    } else {\n      Object.keys(schema.properties).forEach((propName) => {\n        checkValidSchema(schema.properties[propName], errors, [...path, propName]);\n      });\n    }\n  }\n\n  if (schema.type === 'array') {\n    // We check this both before items is turned into additionalItems and after,\n    //  so we need to account for it being both an object and an array.\n    if (Array.isArray(schema.items)) {\n      if (!schema.additionalItems) {\n        errors.push(`${path.join('.')} should contain additionalItems when items is an array.`);\n      }\n      schema.items.forEach((item, index) => {\n        checkValidSchema(item, errors, [...path, 'items', index]);\n      });\n    } else if (typeof schema.items === 'object') {\n      if (schema.additionalItems) {\n        errors.push(`${path.join('.')} should not contain additionalItems when items is an object.`);\n      }\n      checkValidSchema(schema.items, errors, [...path, 'items']);\n    } else {\n      errors.push(`Missing items schema in ${path.join('.')}.`);\n    }\n\n    // Check additionalItems\n    if (schema.additionalItems) {\n      checkValidSchema(schema.additionalItems, errors, [...path, 'additionalItems']);\n    }\n  }\n\n  // We’ve recursed all the way back down to ['root']; throw an error containing\n  //  all the error messages.\n  if (path.length === 1 && errors.length > 0) {\n    // console.log(`Error${errors.length > 1 ? 's' : ''} found in schema: ${errors.join(' ')} -- ${path.join('.')}`);\n    throw new Error(`Error${errors.length > 1 ? 's' : ''} found in schema: ${errors.join(' ')}`);\n  } else {\n    return true;\n  }\n}\n\nexport function setArrayRecordTouched(prefix, index) {\n  return { [`${prefix}_${index}`]: true };\n}\n\nexport function createUSAStateLabels(states) {\n  return states.USA.reduce((current, { label, value }) => {\n    return _.merge(current, { [value]: label });\n  }, {});\n}\n\n/*\n * Take a list of pages and create versions of them\n * for each item in an array\n */\nfunction generateArrayPages(arrayPages, data) {\n  const items = _.get(arrayPages[0].arrayPath, data) || [];\n  return items\n    .reduce((pages, item, index) =>\n      pages.concat(arrayPages.map(page =>\n        _.assign(page, {\n          path: page.path.replace(':index', index),\n          index\n        })\n      )),\n    []\n    )\n    // doing this after the map so that we don’t change indexes\n    .filter(page => !page.itemFilter || page.itemFilter(items[page.index]));\n}\n\n/*\n * We want to generate the pages we need for each item in the array\n * being used by an array page. We also want to group those pages by item.\n * So, this grabs contiguous sections of array pages and at the end generates\n * the right number of pages based on the items in the array\n */\nexport function expandArrayPages(pageList, data) {\n  const result = pageList.reduce((acc, nextPage) => {\n    const { lastArrayPath, arrayPages, currentList } = acc;\n    // If we see an array page and we’re starting a section or in the middle of one, just add it\n    // to the temporary array\n    if (nextPage.showPagePerItem && (!lastArrayPath || nextPage.arrayPath === lastArrayPath)) {\n      arrayPages.push(nextPage);\n      return acc;\n    // Now we’ve hit the end of a section of array pages using the same array, so\n    // actually generate the pages now\n    } else if (nextPage.arrayPath !== lastArrayPath && !!arrayPages.length) {\n      const newList = currentList.concat(generateArrayPages(arrayPages, data), nextPage);\n      return _.assign(acc, {\n        lastArrayPath: null,\n        arrayPages: [],\n        currentList: newList\n      });\n    }\n\n    return _.set('currentList', currentList.concat(nextPage), acc);\n  }, { lastArrayPath: null, arrayPages: [], currentList: [] });\n\n  if (result.arrayPages.length > 0) {\n    return result.currentList.concat(generateArrayPages(result.arrayPages, data));\n  }\n\n  return result.currentList;\n}\n\n/**\n * getPageKeys returns a list of keys for the currently active pages\n *\n * @param pages {Array<Object>} List of page configs\n * @param formData {Object} Current form data\n * @returns {Array<string>} A list of page keys from the page config\n *   and the index if it’s a pagePerItem page\n */\nexport function getPageKeys(pages, formData) {\n  const eligiblePageList = getActivePages(pages, formData);\n  const expandedPageList = expandArrayPages(eligiblePageList, formData);\n\n  return expandedPageList.map(page => {\n    let pageKey = page.pageKey;\n    if (typeof page.index !== 'undefined') {\n      pageKey += page.index;\n    }\n    return pageKey;\n  });\n}\n\n/**\n * getActiveChapters returns the list of chapter keys with active pages\n *\n * @param formConfig {Object} The form config object\n * @param formData {Object} The current form data\n * @returns {Array<string>} The list of chapter key strings for active chapters\n */\nexport function getActiveChapters(formConfig, formData) {\n  const formPages = createFormPageList(formConfig);\n  const pageList = createPageList(formConfig, formPages);\n  const eligiblePageList = getActivePages(pageList, formData);\n  const expandedPageList = expandArrayPages(eligiblePageList, formData);\n\n  return _.uniq(expandedPageList.map(p => p.chapterKey).filter(key => !!key && key !== 'review'));\n}\n\n/**\n * Returns the schema, omitting all `required` arrays.\n *\n * @param schema {Object}\n * @returns {Object} The schema without any `required` arrays\n */\nexport function omitRequired(schema) {\n  if (typeof schema !== 'object' || Array.isArray(schema)) {\n    return schema;\n  }\n\n  const newSchema = _.omit('required', schema);\n  Object.keys(newSchema).forEach(key => {\n    newSchema[key] = omitRequired(newSchema[key]);\n  });\n\n  return newSchema;\n}\n\n/**\n * Helper function for reporting events to Google Analytics. An alias for window.dataLayer.push.\n * @module platform/monitoring/record-event\n * @see https://developers.google.com/tag-manager/devguide\n * @param {object} data - The event data that will be sent to GA.\n */\nexport function recordEvent(data) {\n  return window.dataLayer && window.dataLayer.push(data);\n}\n"]}