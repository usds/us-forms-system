{"version":3,"sources":["../../../src/js/review/StringField.jsx"],"names":["StringField","props","registry","schema","uiSchema","formData","uiOptions","labels","enumOptions","Array","isArray","enum","Widget","defaultWidget","format","widget","widgets"],"mappings":";;;;;;;;;;;;;;;;kBAcwBA,W;;AAdxB;;;;AAGA;;;;AAMA;;;;;AAKe,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MACjCC,QADiC,GACQD,KADR,CACjCC,QADiC;AAAA,MACvBC,MADuB,GACQF,KADR,CACvBE,MADuB;AAAA,MACfC,QADe,GACQH,KADR,CACfG,QADe;AAAA,MACLC,QADK,GACQJ,KADR,CACLI,QADK;;AAEzC,MAAMC,YAAY,yBAAaF,QAAb,CAAlB;AACA,MAAMG,SAASD,UAAUC,MAAV,IAAoB,EAAnC;AACA,MAAMC,cAAcC,MAAMC,OAAN,CAAcP,OAAOQ,IAArB,KAA8B,wBAAYR,MAAZ,CAAlD;;AAEA,MAAIS,SAAS,mBAAM,iBAAN,EAAyBR,QAAzB,CAAb;AACA,MAAI,CAACQ,MAAL,EAAa;AACX,QAAMC,gBAAgBV,OAAOW,MAAP,KAAkBN,cAAc,QAAd,GAAyB,MAA3C,CAAtB;AACAI,aAAS,sBAAUT,MAAV,EAAkBG,UAAUS,MAAV,IAAoBF,aAAtC,EAAqDX,SAASc,OAA9D,CAAT;AACD;;AAED,SACE,8BAAC,MAAD;AACE,aAAS,sBAASV,SAAT,EAAoB,EAAEE,wBAAF,EAAeD,cAAf,EAApB,CADX;AAEE,WAAOF;AAFT,KAGMJ,KAHN,EADF;AAMD","file":"StringField.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash/fp';\n\nimport {\n  getUiOptions,\n  getWidget,\n  optionsList\n} from '@department-of-veterans-affairs/react-jsonschema-form/lib/utils';\n\n/*\n * This is a minimal string field implementation for the\n * review page, so we can pass custom review widgets\n * in the config\n */\nexport default function StringField(props) {\n  const { registry, schema, uiSchema, formData } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const labels = uiOptions.labels || {};\n  const enumOptions = Array.isArray(schema.enum) && optionsList(schema);\n\n  let Widget = _.get('ui:reviewWidget', uiSchema);\n  if (!Widget) {\n    const defaultWidget = schema.format || (enumOptions ? 'select' : 'text');\n    Widget = getWidget(schema, uiOptions.widget || defaultWidget, registry.widgets);\n  }\n\n  return (\n    <Widget\n      options={_.assign(uiOptions, { enumOptions, labels })}\n      value={formData}\n      {...props}/>\n  );\n}\n"]}