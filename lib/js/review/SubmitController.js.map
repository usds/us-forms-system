{"version":3,"sources":["../../../src/js/review/SubmitController.jsx"],"names":["SubmitController","goBack","props","form","pageList","router","eligiblePageList","data","expandedPageList","push","length","path","handleSubmit","formConfig","pagesByChapter","privacyAgreementAccepted","trackingPrefix","isValid","errors","consoleSubmit","console","log","submitForm","event","Raven","captureMessage","extra","prefix","setSubmission","nextProps","nextStatus","submission","status","previousStatus","newRoute","urlPrefix","renderErrorMessage","showPrivacyAgreementError","setPrivacyAgreement","React","Component","mapStateToProps","state","ownProps","hasAttemptedSubmit","mapDispatchToProps","propTypes","PropTypes","object","isRequired","array","bool","func","string"],"mappings":"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","file":"SubmitController.js","sourcesContent":["import React from 'react';\nimport Raven from 'raven-js';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport SubmitButtons from './SubmitButtons';\nimport PrivacyAgreement from '../components/PrivacyAgreement';\nimport { isValidForm } from '../validation';\nimport {\n  createPageListByChapter,\n  expandArrayPages,\n  getActivePages,\n  recordEvent\n} from '../helpers';\nimport {\n  setPrivacyAgreement,\n  setSubmission,\n  submitForm\n} from '../actions';\n\nclass SubmitController extends React.Component {\n\n  componentWillReceiveProps(nextProps) {\n    const nextStatus = nextProps.form.submission.status;\n    const previousStatus = this.props.form.submission.status;\n    if (nextStatus !== previousStatus && nextStatus === 'applicationSubmitted') {\n      const newRoute = `${nextProps.formConfig.urlPrefix}confirmation`;\n      this.props.router.push(newRoute);\n    }\n  }\n\n  goBack = () => {\n    const {\n      form,\n      pageList,\n      router\n    } = this.props;\n\n    const eligiblePageList = getActivePages(pageList, form.data);\n    const expandedPageList = expandArrayPages(eligiblePageList, this.props.form.data);\n\n    router.push(expandedPageList[expandedPageList.length - 2].path);\n  }\n\n  handleSubmit = () => {\n    const {\n      form,\n      formConfig,\n      pagesByChapter,\n      privacyAgreementAccepted,\n      trackingPrefix\n    } = this.props;\n\n    const {\n      isValid,\n      errors\n    } = isValidForm(form, pagesByChapter);\n\n    if (formConfig.consoleSubmit) {\n      /* eslint-disable no-console */\n      console.log(`SubmitController, isValid = ${isValid}`);\n      if (errors && errors.length) {\n        console.log(errors);\n      }\n      console.log(form);\n      /* eslint-enable no-console */\n    }\n    if (isValid) {\n      this.props.submitForm(formConfig, form);\n    } else {\n      // validation errors in this situation are not visible, so we’d\n      // like to know if they’re common\n      if (privacyAgreementAccepted) {\n        recordEvent({\n          event: `${trackingPrefix}-validation-failed`,\n        });\n        Raven.captureMessage('Validation issue not displayed', {\n          extra: {\n            errors,\n            prefix: trackingPrefix\n          }\n        });\n        this.props.setSubmission('status', 'validationError');\n      }\n      this.props.setSubmission('hasAttemptedSubmit', true);\n    }\n  }\n\n  render() {\n    const {\n      privacyAgreementAccepted,\n      renderErrorMessage,\n      showPrivacyAgreementError,\n      submission\n    } = this.props;\n    return (\n      <div>\n        <p><strong>Note:</strong> According to federal law, there are criminal penalties, including a fine and/or imprisonment for up to 5 years, for withholding information or for providing incorrect information. (See 18 U.S.C. 1001)</p>\n        <PrivacyAgreement\n          required\n          onChange={this.props.setPrivacyAgreement}\n          checked={privacyAgreementAccepted}\n          showError={showPrivacyAgreementError}/>\n        <SubmitButtons\n          onBack={this.goBack}\n          onSubmit={this.handleSubmit}\n          submission={submission}\n          renderErrorMessage={renderErrorMessage}/>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const {\n    formConfig,\n    pageList,\n    renderErrorMessage\n  } = ownProps;\n  const router = ownProps.router;\n\n  const form = state.form;\n  const pagesByChapter = createPageListByChapter(formConfig);\n  const trackingPrefix = formConfig.trackingPrefix;\n  const submission = form.submission;\n  const showPrivacyAgreementError = submission.hasAttemptedSubmit;\n  const privacyAgreementAccepted = form.data.privacyAgreementAccepted;\n\n  return {\n    form,\n    formConfig,\n    pagesByChapter,\n    pageList,\n    privacyAgreementAccepted,\n    renderErrorMessage,\n    router,\n    submission,\n    showPrivacyAgreementError,\n    trackingPrefix\n  };\n}\n\nconst mapDispatchToProps = {\n  setPrivacyAgreement,\n  setSubmission,\n  submitForm\n};\n\nSubmitController.propTypes = {\n  form: PropTypes.object.isRequired,\n  formConfig: PropTypes.object.isRequired,\n  pagesByChapter: PropTypes.object.isRequired,\n  pageList: PropTypes.array.isRequired,\n  privacyAgreementAccepted: PropTypes.bool.isRequired,\n  renderErrorMessage: PropTypes.func,\n  router: PropTypes.object.isRequired,\n  setPrivacyAgreement: PropTypes.func.isRequired,\n  setSubmission: PropTypes.func.isRequired,\n  submitForm: PropTypes.func.isRequired,\n  submission: PropTypes.object.isRequired,\n  trackingPrefix: PropTypes.string.isRequired\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SubmitController));\n\n// for tests\nexport { SubmitController };\n"]}