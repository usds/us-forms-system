{"version":3,"sources":["../../../src/js/review/ReviewCollapsibleChapter.jsx"],"names":["Element","Scroll","scroller","ReviewCollapsibleChapter","handleSubmit","formData","key","path","index","newData","props","form","data","setData","handleEdit","bind","id","pageDiv","document","querySelector","editing","onEdit","scrollToPage","focusOnPage","scrollTo","window","Forms","scroll","duration","delay","smooth","pageContent","chapterFormConfig","expandedPages","formContext","pageKeys","showUnviewedPageWarning","viewedPages","ChapterDescription","reviewDescription","chapterTitle","title","reviewTitle","open","map","pageState","pages","page","pageKey","pageSchema","pageUiSchema","pageData","arrayFields","fullPageKey","showPagePerItem","editMode","schema","properties","arrayPath","items","uiSchema","classes","has","hideHeaderRow","length","onBlur","onChange","uploadFile","editModeOnReviewPage","arrayField","chapterKey","toggleButtonClicked","React","Component","propTypes","PropTypes","object","isRequired","func"],"mappings":"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","file":"ReviewCollapsibleChapter.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport Scroll from 'react-scroll';\nimport _ from 'lodash/fp';\nimport classNames from 'classnames';\n\nimport ProgressButton from '../components/ProgressButton';\nimport { focusElement } from '../utilities/ui';\nimport SchemaForm from '../components/SchemaForm';\nimport {\n  getArrayFields,\n  getNonArraySchema,\n} from '../helpers';\nimport ArrayField from './ArrayField';\n\nconst Element = Scroll.Element;\nconst scroller = Scroll.scroller;\n\n/*\n * Displays all the pages in a chapter on the review page\n */\nexport default class ReviewCollapsibleChapter extends React.Component {\n  constructor() {\n    super();\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  componentWillMount() {\n    this.id = _.uniqueId();\n  }\n\n  onChange(formData, path = null, index = null) {\n    let newData = formData;\n    if (path) {\n      newData = _.set([path, index], formData, this.props.form.data);\n    }\n    this.props.setData(newData);\n  }\n\n  focusOnPage(key) {\n    const pageDiv = document.querySelector(`#${key}`);\n    focusElement(pageDiv);\n  }\n\n  handleEdit(key, editing, index = null) {\n    this.props.onEdit(key, editing, index);\n    this.scrollToPage(`${key}${index === null ? '' : index}`);\n    this.focusOnPage(`${key}${index === null ? '' : index}`);\n  }\n\n  handleSubmit = (formData, key, path = null, index = null) => {\n    // This makes sure defaulted data on a page with no changes is saved\n    // Probably safe to do this for regular pages, too, but it hasnâ€™t been necessary\n    if (path) {\n      const newData = _.set([path, index], formData, this.props.form.data);\n      this.props.setData(newData);\n    }\n\n    this.handleEdit(key, false, index);\n  }\n\n  scrollToPage(key) {\n    scroller.scrollTo(`${key}ScrollElement`, window.Forms.scroll || {\n      duration: 500,\n      delay: 2,\n      smooth: true,\n    });\n  }\n\n  render() {\n    let pageContent = null;\n\n    const {\n      chapterFormConfig,\n      expandedPages,\n      form,\n      formContext,\n      pageKeys,\n      showUnviewedPageWarning,\n      viewedPages\n    } = this.props;\n\n    const ChapterDescription = chapterFormConfig.reviewDescription;\n    let chapterTitle = chapterFormConfig.title;\n    if (typeof chapterFormConfig.title === 'function') {\n      chapterTitle = chapterFormConfig.title(true);\n    }\n    if (chapterFormConfig.reviewTitle) {\n      chapterTitle = chapterFormConfig.reviewTitle;\n    }\n\n    if (this.props.open) {\n      pageContent = (\n        <div className=\"usa-accordion-content schemaform-chapter-accordion-content\" aria-hidden=\"false\">\n          {ChapterDescription &&\n            <ChapterDescription\n              viewedPages={viewedPages}\n              pageKeys={pageKeys}\n              formData={form.data}/>}\n          {expandedPages.map(page => {\n            const pageState = form.pages[page.pageKey];\n            let pageSchema;\n            let pageUiSchema;\n            let pageData;\n            let arrayFields;\n            let editing;\n            let fullPageKey;\n\n            if (page.showPagePerItem) {\n              editing = pageState.editMode[page.index];\n              pageSchema = pageState.schema.properties[page.arrayPath].items[page.index];\n              pageUiSchema = pageState.uiSchema[page.arrayPath].items;\n              pageData = _.get([page.arrayPath, page.index], form.data);\n              arrayFields = [];\n              fullPageKey = `${page.pageKey}${page.index}`;\n            } else {\n              editing = pageState.editMode;\n              // TODO: support array fields inside of an array page?\n              // Our pattern is to separate out array fields (growable tables) from\n              // the normal page and display them separately. The review version of\n              // ObjectField will hide them in the main section.\n              arrayFields = getArrayFields(pageState, page);\n              // This will be undefined if there are no fields other than an array\n              // in a page, in which case we wonâ€™t render the form, just the array\n              pageSchema = getNonArraySchema(pageState.schema, pageState.uiSchema);\n              pageUiSchema = pageState.uiSchema;\n              pageData = form.data;\n              fullPageKey = page.pageKey;\n            }\n\n            const classes = classNames('form-review-panel-page', {\n              'schemaform-review-page-warning': !viewedPages.has(fullPageKey)\n            });\n\n            return (\n              <div key={`${fullPageKey}`} className={classes}>\n                <Element name={`${fullPageKey}ScrollElement`}/>\n                {pageSchema &&\n                  <SchemaForm\n                    name={page.pageKey}\n                    title={page.reviewTitle || page.title}\n                    data={pageData}\n                    schema={pageSchema}\n                    uiSchema={pageUiSchema}\n                    hideHeaderRow={page.hideHeaderRow}\n                    hideTitle={expandedPages.length === 1}\n                    pagePerItemIndex={page.index}\n                    onBlur={this.props.onBlur}\n                    onEdit={() => this.handleEdit(page.pageKey, !editing, page.index)}\n                    onSubmit={({ formData }) => this.handleSubmit(formData, page.pageKey, page.arrayPath, page.index)}\n                    onChange={(formData) => this.onChange(formData, page.arrayPath, page.index)}\n                    uploadFile={this.props.uploadFile}\n                    reviewMode={!editing}\n                    formContext={formContext}\n                    editModeOnReviewPage={page.editModeOnReviewPage}>\n                    {!editing ? <div/> : <ProgressButton\n                      submitButton\n                      buttonText=\"Update Page\"\n                      buttonClass=\"usa-button-primary\"/>}\n                  </SchemaForm>}\n                {arrayFields.map(arrayField => (\n                  <div key={arrayField.path} className=\"form-review-array\">\n                    <ArrayField\n                      pageKey={page.pageKey}\n                      pageTitle={page.title}\n                      arrayData={_.get(arrayField.path, form.data)}\n                      formData={form.data}\n                      formContext={formContext}\n                      pageConfig={page}\n                      onBlur={this.props.onBlur}\n                      schema={arrayField.schema}\n                      uiSchema={arrayField.uiSchema}\n                      setData={this.props.setData}\n                      path={arrayField.path}/>\n                  </div>\n                ))}\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n\n    const classes = classNames('usa-accordion-bordered', 'form-review-panel', {\n      'schemaform-review-chapter-warning': showUnviewedPageWarning\n    });\n\n    return (\n      <div id={`${this.id}-collapsiblePanel`} className={classes}>\n        <Element name={`chapter${this.props.chapterKey}ScrollElement`}/>\n        <ul className=\"usa-unstyled-list\">\n          <li>\n            <div className=\"accordion-header clearfix schemaform-chapter-accordion-header\">\n              <button\n                className=\"usa-button-unstyled\"\n                aria-expanded={this.props.open ? 'true' : 'false'}\n                aria-controls={`collapsible-${this.id}`}\n                onClick={this.props.toggleButtonClicked}>\n                {chapterTitle}\n              </button>\n              {showUnviewedPageWarning && <span className=\"schemaform-review-chapter-warning-icon\"/>}\n            </div>\n            <div id={`collapsible-${this.id}`}>\n              {pageContent}\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\n// TODO: refactor to pass form.data instead of the entire form object\nReviewCollapsibleChapter.propTypes = {\n  chapterFormConfig: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n  onEdit: PropTypes.func.isRequired\n};\n"]}