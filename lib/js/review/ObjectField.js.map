{"version":3,"sources":["../../../src/js/review/ObjectField.jsx"],"names":["ObjectField","isRequired","bind","orderAndFilterProperties","properties","props","uiSchema","item","expandUnderField","nextProps","nextState","name","value","formData","Object","keys","length","schema","undefined","registry","definitions","onChange","Array","isArray","required","indexOf","errorSchema","idSchema","formContext","SchemaField","fields","isRoot","$id","renderField","propName","onPropertyChange","onBlur","showField","hiddenOnSchema","collapsedOnSchema","hideOnReviewIfFalse","hideOnReview","renderedProperties","map","objectFields","index","first","rest","visible","filter","prop","title","pageTitle","hideTitle","hideHeaderRow","onEdit","React","Component","defaultProps","disabled","readonly","propTypes","PropTypes","object","bool","shape","widgets","objectOf","oneOfType","func"],"mappings":"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","file":"ObjectField.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport _ from 'lodash/fp';\n\nimport {\n  getDefaultFormState,\n  orderProperties,\n  shouldRender,\n  getDefaultRegistry,\n} from '@department-of-veterans-affairs/react-jsonschema-form/lib/utils';\n\n/*\n * This is largely copied from the react-jsonschema-form library,\n * but with the way descriptions are used changed\n */\n\nclass ObjectField extends React.Component {\n  static defaultProps = {\n    uiSchema: {},\n    errorSchema: {},\n    idSchema: {},\n    registry: getDefaultRegistry(),\n    required: false,\n    disabled: false,\n    readonly: false,\n  }\n\n  constructor() {\n    super();\n    this.isRequired = this.isRequired.bind(this);\n    this.orderAndFilterProperties = _.flow(\n      properties => orderProperties(properties, _.get('ui:order', this.props.uiSchema)),\n      _.groupBy((item) => {\n        const expandUnderField = _.get([item, 'ui:options', 'expandUnder'], this.props.uiSchema);\n        return expandUnderField || item;\n      }),\n      _.values\n    );\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return shouldRender(this, nextProps, nextState);\n  }\n\n  onPropertyChange(name) {\n    return (value) => {\n      const formData = Object.keys(this.props.formData || {}).length\n        ? this.props.formData\n        : getDefaultFormState(this.props.schema, undefined, this.props.registry.definitions);\n      this.props.onChange(_.set(name, value, formData));\n    };\n  }\n\n  getStateFromProps(props) {\n    const { schema, formData, registry } = props;\n    return getDefaultFormState(schema, formData, registry.definitions) || {};\n  }\n\n  isRequired(name) {\n    const schema = this.props.schema;\n    return Array.isArray(schema.required) &&\n      schema.required.indexOf(name) !== -1;\n  }\n\n  render() {\n    const {\n      uiSchema,\n      errorSchema,\n      idSchema,\n      schema,\n      formContext\n    } = this.props;\n    const SchemaField = this.props.registry.fields.SchemaField;\n\n    const properties = Object.keys(schema.properties);\n    const isRoot = idSchema.$id === 'root';\n    const formData = this.props.formData || {};\n\n    const renderField = (propName) => {\n      return (\n        <SchemaField key={propName}\n          name={propName}\n          schema={schema.properties[propName]}\n          uiSchema={uiSchema[propName]}\n          errorSchema={errorSchema[propName]}\n          idSchema={idSchema[propName]}\n          onChange={this.onPropertyChange(propName)}\n          onBlur={this.props.onBlur}\n          required={this.isRequired(propName)}\n          formData={formData[propName]}\n          registry={this.props.registry}/>\n      );\n    };\n\n    const showField = (propName) => {\n      const hiddenOnSchema = schema.properties[propName]['ui:hidden'];\n      const collapsedOnSchema = schema.properties[propName]['ui:collapsed'];\n      const hideOnReviewIfFalse = _.get([propName, 'ui:options', 'hideOnReviewIfFalse'], uiSchema) === true;\n      const hideOnReview = _.get([propName, 'ui:options', 'hideOnReview'], uiSchema) === true;\n      return (!hideOnReviewIfFalse || !!formData[propName]) && !hideOnReview && !hiddenOnSchema && !collapsedOnSchema;\n    };\n\n    const renderedProperties = this.orderAndFilterProperties(properties)\n      .map((objectFields, index) => {\n        const [first, ...rest] = objectFields;\n        // expand under functionality is controlled in the reducer by setting ui:collapsed, so\n        // we can check if its expanded by seeing if there are any visible \"children\"\n        const visible = rest.filter(prop => !_.get(['properties', prop, 'ui:collapsed'], schema));\n        if (objectFields.length > 1 && visible.length > 0) {\n          return objectFields.filter(showField).map(renderField);\n        }\n        return showField(first) ? renderField(first, index) : null;\n      });\n\n    if (isRoot) {\n      let title = formContext.pageTitle;\n      if (!formContext.hideTitle && typeof title === 'function') {\n        title = title(formData, formContext);\n      }\n      return (\n        <div>\n          {!formContext.hideHeaderRow && <div className=\"form-review-panel-page-header-row\">\n            <h5 className=\"form-review-panel-page-header\">{!formContext.hideTitle ? title : null}</h5>\n            <button type=\"button\" className=\"edit-btn primary-outline\" onClick={() => formContext.onEdit()}>Edit</button>\n          </div>}\n          <dl className=\"review\">\n            {renderedProperties}\n          </dl>\n        </div>\n      );\n    }\n\n    return <div>{renderedProperties}</div>;\n  }\n}\n\nObjectField.propTypes = {\n  schema: PropTypes.object.isRequired,\n  uiSchema: PropTypes.object,\n  errorSchema: PropTypes.object,\n  idSchema: PropTypes.object,\n  formData: PropTypes.object,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  readonly: PropTypes.bool,\n  registry: PropTypes.shape({\n    widgets: PropTypes.objectOf(PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n    ])).isRequired,\n    fields: PropTypes.objectOf(PropTypes.func).isRequired,\n    definitions: PropTypes.object.isRequired,\n    formContext: PropTypes.object.isRequired,\n  })\n};\n\nexport default ObjectField;\n\n"]}