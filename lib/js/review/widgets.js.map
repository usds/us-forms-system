{"version":3,"sources":["../../../src/js/review/widgets.jsx"],"names":["TextWidget","DateWidget","SelectWidget","value","options","monthYear","EmailWidget","TextareaWidget","enumOptions","labels","selected","find","opt","label","RadioWidget","yesNo","yesNoReverse","yesValue","noValue","displayValue","Y","N","CheckboxWidget"],"mappings":";;;;;;QAGgBA,U,GAAAA,U;QAIAC,U,GAAAA,U;QAOAC,Y,GAAAA,Y;;AAdhB;;;;AACA;;;;AAEO,SAASF,UAAT,OAA+B;AAAA,MAATG,KAAS,QAATA,KAAS;;AACpC,SAAO;AAAA;AAAA;AAAOA;AAAP,GAAP;AACD;;AAEM,SAASF,UAAT,QAAwC;AAAA,MAAlBE,KAAkB,SAAlBA,KAAkB;AAAA,MAAXC,OAAW,SAAXA,OAAW;;AAC7C,SAAO;AAAA;AAAA;AAAO,mCAAiBD,KAAjB,EAAwBC,QAAQC,SAAhC;AAAP,GAAP;AACD;;AAEM,IAAMC,oCAAcN,UAApB;AACA,IAAMO,0CAAiBP,UAAvB;;AAEA,SAASE,YAAT,QAA0C;AAAA,MAAlBE,OAAkB,SAAlBA,OAAkB;AAAA,MAATD,KAAS,SAATA,KAAS;AAAA,MACvCK,WADuC,GACVJ,OADU,CACvCI,WADuC;AAAA,wBACVJ,OADU,CAC1BK,MAD0B;AAAA,MAC1BA,MAD0B,mCACjB,EADiB;;AAE/C,MAAMC,WAAWF,YAAYG,IAAZ,CAAiB;AAAA,WAAOC,IAAIT,KAAJ,KAAcA,KAArB;AAAA,GAAjB,CAAjB;AACA,MAAIO,QAAJ,EAAc;AACZ,WAAO;AAAA;AAAA;AAAOD,aAAON,KAAP,KAAiBO,SAASG;AAAjC,KAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAEM,IAAMC,oCAAcZ,YAApB;;AAEA,IAAMa,wBAAQ,SAARA,KAAQ,QAA6B;AAAA,MAA1BZ,KAA0B,SAA1BA,KAA0B;AAAA,4BAAnBC,OAAmB;AAAA,MAAnBA,OAAmB,iCAAT,EAAS;AAAA,8BACFA,OADE,CACxCY,YADwC;AAAA,MACxCA,YADwC,yCACzB,KADyB;AAAA,yBACFZ,OADE,CAClBK,MADkB;AAAA,MAClBA,MADkB,oCACT,EADS;;AAEhD,MAAMQ,WAAW,CAACD,YAAlB;AACA,MAAME,UAAU,CAACD,QAAjB;;AAEA,MAAIE,qBAAJ;AACA,MAAIhB,UAAUc,QAAd,EAAwB;AACtBE,mBAAeV,OAAOW,CAAP,IAAY,KAA3B;AACD,GAFD,MAEO,IAAIjB,UAAUe,OAAd,EAAuB;AAC5BC,mBAAeV,OAAOY,CAAP,IAAY,IAA3B;AACD;;AAED,SAAO;AAAA;AAAA;AAAOF;AAAP,GAAP;AACD,CAbM;;AAeA,IAAMG,0CAAiB,SAAjBA,cAAiB,QAAe;AAAA,MAAZnB,KAAY,SAAZA,KAAY;;AAC3C,SAAO;AAAA;AAAA;AAAOA,cAAU,IAAV,GAAiB,MAAjB,GAA0B;AAAjC,GAAP;AACD,CAFM","file":"widgets.js","sourcesContent":["import React from 'react';\nimport { formatReviewDate } from '../helpers';\n\nexport function TextWidget({ value }) {\n  return <span>{value}</span>;\n}\n\nexport function DateWidget({ value, options }) {\n  return <span>{formatReviewDate(value, options.monthYear)}</span>;\n}\n\nexport const EmailWidget = TextWidget;\nexport const TextareaWidget = TextWidget;\n\nexport function SelectWidget({ options, value }) {\n  const { enumOptions, labels = {} } = options;\n  const selected = enumOptions.find(opt => opt.value === value);\n  if (selected) {\n    return <span>{labels[value] || selected.label}</span>;\n  }\n\n  return null;\n}\n\nexport const RadioWidget = SelectWidget;\n\nexport const yesNo = ({ value, options = {} }) => {\n  const { yesNoReverse = false, labels = {} } = options;\n  const yesValue = !yesNoReverse;\n  const noValue = !yesValue;\n\n  let displayValue;\n  if (value === yesValue) {\n    displayValue = labels.Y || 'Yes';\n  } else if (value === noValue) {\n    displayValue = labels.N || 'No';\n  }\n\n  return <span>{displayValue}</span>;\n};\n\nexport const CheckboxWidget = ({ value }) => {\n  return <span>{value === true ? 'True' : ''}</span>;\n};\n"]}