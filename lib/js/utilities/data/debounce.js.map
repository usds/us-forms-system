{"version":3,"sources":["../../../../src/js/utilities/data/debounce.js"],"names":["debounce","wait","func","timeoutId","debouncedFunc","debouncedFunction","args","context","clearTimeout","setTimeout","apply","cancel"],"mappings":";;;;;kBAIwBA,Q;AAJxB;;;;AAIe,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AAC3C,MAAIC,kBAAJ;;AAEA,MAAMC,gBAAgB,SAASC,iBAAT,GAAoC;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AACxD,QAAMC,UAAU,IAAhB;AACAC,iBAAaL,SAAb;AACAA,gBAAYM,WAAW;AAAA,aAAMP,KAAKQ,KAAL,CAAWH,OAAX,EAAoBD,IAApB,CAAN;AAAA,KAAX,EAA4CL,IAA5C,CAAZ;AACD,GAJD;;AAMAG,gBAAcO,MAAd,GAAuB,SAASA,MAAT,GAAkB;AACvCH,iBAAaL,SAAb;AACD,GAFD;;AAIA,SAAOC,aAAP;AACD","file":"debounce.js","sourcesContent":["/**\n * @param {number}\n * @param {function}\n */\nexport default function debounce(wait, func) {\n  let timeoutId;\n\n  const debouncedFunc = function debouncedFunction(...args) {\n    const context = this;\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func.apply(context, args), wait);\n  };\n\n  debouncedFunc.cancel = function cancel() {\n    clearTimeout(timeoutId);\n  };\n\n  return debouncedFunc;\n}\n"]}