{"version":3,"sources":["../../../../src/js/utilities/date/index.js"],"names":["timeFromNow","months","label","value","twentyNineDays","thirtyDays","thirtyOneDays","days","formatDiff","diff","desc","date","userFromDate","fromDate","Date","dayDiff","hourDiff","minuteDiff","secondDiff"],"mappings":"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","file":"index.js","sourcesContent":["import {\n  differenceInDays,\n  differenceInHours,\n  differenceInMinutes,\n  differenceInSeconds\n} from 'date-fns';\n\nexport const months = [\n  { label: 'Jan', value: 1 },\n  { label: 'Feb', value: 2 },\n  { label: 'Mar', value: 3 },\n  { label: 'Apr', value: 4 },\n  { label: 'May', value: 5 },\n  { label: 'Jun', value: 6 },\n  { label: 'Jul', value: 7 },\n  { label: 'Aug', value: 8 },\n  { label: 'Sep', value: 9 },\n  { label: 'Oct', value: 10 },\n  { label: 'Nov', value: 11 },\n  { label: 'Dec', value: 12 }\n];\n\nconst twentyNineDays = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29'];\nconst thirtyDays = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'];\nconst thirtyOneDays = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'];\n\nexport const days = {\n  1: thirtyOneDays,\n  2: twentyNineDays,\n  3: thirtyOneDays,\n  4: thirtyDays,\n  5: thirtyOneDays,\n  6: thirtyDays,\n  7: thirtyOneDays,\n  8: thirtyOneDays,\n  9: thirtyDays,\n  10: thirtyOneDays,\n  11: thirtyDays,\n  12: thirtyOneDays\n};\n\nfunction formatDiff(diff, desc) {\n  return `${diff} ${desc}${diff === 1 ? '' : 's'}`;\n}\n\n/**\n * timeFromNow returns the number of days, hours, or minutes until\n * the provided date occurs. It’s meant to be less fuzzy than moment’s\n * timeFromNow so it can be used for expiration dates\n *\n * @param date {Date} The future date to check against\n * @param userFromDate {Date} The earlier date in the range. Defaults to today.\n * @returns {string} The string description of how long until date occurs\n */\nexport function timeFromNow(date, userFromDate = null) {\n  // Not using defaulting because we want today to be when this function\n  // is called, not when the file is parsed and run\n  const fromDate = userFromDate || new Date();\n  const dayDiff = differenceInDays(date, fromDate);\n\n  if (dayDiff >= 1) {\n    return formatDiff(dayDiff, 'day');\n  }\n\n  const hourDiff = differenceInHours(date, fromDate);\n\n  if (hourDiff >= 1) {\n    return formatDiff(hourDiff, 'hour');\n  }\n\n  const minuteDiff = differenceInMinutes(fromDate);\n\n  if (minuteDiff >= 1) {\n    return formatDiff(minuteDiff, 'minute');\n  }\n\n  const secondDiff = differenceInSeconds(fromDate);\n\n  if (secondDiff >= 1) {\n    return formatDiff(secondDiff, 'second');\n  }\n\n  return 'a moment';\n}\n"]}