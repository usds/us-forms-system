{"version":3,"sources":["../../src/js/actions.js"],"names":["closeReviewChapter","openReviewChapter","setData","setEditMode","setSubmission","setPreSubmit","setSubmitted","setViewedPages","submitForm","uploadFile","SET_EDIT_MODE","SET_DATA","SET_VIEWED_PAGES","SET_PRE_SUBMIT","SET_SUBMISSION","SET_SUBMITTED","OPEN_REVIEW_CHAPTER","CLOSE_REVIEW_CHAPTER","closedChapter","pageKeys","type","openedChapter","data","page","edit","index","field","value","extra","preSubmitField","preSubmitAccepted","response","submitToUrl","body","submitUrl","trackingPrefix","Promise","resolve","reject","req","XMLHttpRequest","open","addEventListener","status","event","responseBody","responseText","results","JSON","parse","error","Error","statusText","parseInt","getResponseHeader","setRequestHeader","withCredentials","send","formConfig","form","captureError","errorType","Raven","captureException","fingerprint","message","startsWith","dispatch","promise","submit","transformForSubmit","then","resp","catch","errorReceived","errorMessage","String","file","uiOptions","onProgress","onChange","onError","getState","size","maxSize","name","minSize","fileTypes","some","toLowerCase","endsWith","fileType","uploading","payload","createPayload","formId","fileUploadUrl","fileData","parseResponse","moment","unix","captureMessage","upload","evt","lengthComputable","loaded","total"],"mappings":"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","file":"actions.js","sourcesContent":["import Raven from 'raven-js';\nimport moment from 'moment';\nimport { transformForSubmit, recordEvent } from './helpers';\nimport { timeFromNow } from './utilities/date';\n\nexport const SET_EDIT_MODE = 'SET_EDIT_MODE';\nexport const SET_DATA = 'SET_DATA';\nexport const SET_VIEWED_PAGES = 'SET_VIEWED_PAGES';\nexport const SET_PRE_SUBMIT = 'SET_PRE_SUBMIT';\nexport const SET_SUBMISSION = 'SET_SUBMISSION';\nexport const SET_SUBMITTED = 'SET_SUBMITTED';\nexport const OPEN_REVIEW_CHAPTER = 'OPEN_REVIEW_CHAPTER';\nexport const CLOSE_REVIEW_CHAPTER = 'CLOSE_REVIEW_CHAPTER';\n\nexport function closeReviewChapter(closedChapter, pageKeys = []) {\n  return {\n    type: CLOSE_REVIEW_CHAPTER,\n    closedChapter,\n    pageKeys\n  };\n}\n\nexport function openReviewChapter(openedChapter) {\n  return {\n    type: OPEN_REVIEW_CHAPTER,\n    openedChapter\n  };\n}\n\nexport function setData(data) {\n  return {\n    type: SET_DATA,\n    data\n  };\n}\n\nexport function setEditMode(page, edit, index = null) {\n  return {\n    type: SET_EDIT_MODE,\n    edit,\n    page,\n    index\n  };\n}\n\n// extra is used to pass other information (from a submission error or anything else)\n// into the submission state object\nexport function setSubmission(field, value, extra = null) {\n  return {\n    type: SET_SUBMISSION,\n    field,\n    value,\n    extra\n  };\n}\n\nexport function setPreSubmit(preSubmitField, preSubmitAccepted) {\n  return {\n    type: SET_PRE_SUBMIT,\n    preSubmitField,\n    preSubmitAccepted\n  };\n}\n\nexport function setSubmitted(response) {\n  return {\n    type: SET_SUBMITTED,\n    response: typeof response.data !== 'undefined' ? response.data : response\n  };\n}\n\n\nexport function setViewedPages(pageKeys) {\n  return {\n    type: SET_VIEWED_PAGES,\n    pageKeys\n  };\n}\n\nfunction submitToUrl(body, submitUrl, trackingPrefix) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest();\n    req.open('POST', submitUrl);\n    req.addEventListener('load', () => {\n      if (req.status >= 200 && req.status < 300) {\n        recordEvent({\n          event: `${trackingPrefix}-submission-successful`,\n        });\n        // got this from the fetch polyfill, keeping it to be safe\n        const responseBody = 'response' in req ? req.response : req.responseText;\n        const results = JSON.parse(responseBody);\n        resolve(results);\n      } else {\n        let error;\n        if (req.status === 429) {\n          error = new Error(`vets_throttled_error: ${req.statusText}`);\n          error.extra = parseInt(req.getResponseHeader('x-ratelimit-reset'), 10);\n        } else {\n          error = new Error(`vets_server_error: ${req.statusText}`);\n        }\n        error.statusText = req.statusText;\n        reject(error);\n      }\n    });\n\n    req.addEventListener('error', () => {\n      const error = new Error('vets_client_error: Network request failed');\n      error.statusText = req.statusText;\n      reject(error);\n    });\n\n    req.addEventListener('abort', () => {\n      const error = new Error('vets_client_error: Request aborted');\n      error.statusText = req.statusText;\n      reject(error);\n    });\n\n    req.addEventListener('timeout', () => {\n      const error = new Error('vets_client_error: Request timed out');\n      error.statusText = req.statusText;\n      reject(error);\n    });\n\n    req.setRequestHeader('X-Key-Inflection', 'camel');\n    req.setRequestHeader('Content-Type', 'application/json');\n    req.withCredentials = true;\n\n    req.send(body);\n  });\n}\n\nexport function submitForm(formConfig, form) {\n  const captureError = (error, errorType) => {\n    Raven.captureException(error, {\n      fingerprint: [formConfig.trackingPrefix, error.message],\n      extra: {\n        errorType,\n        statusText: error.statusText\n      }\n    });\n    recordEvent({\n      event: `${formConfig.trackingPrefix}-submission-failed${errorType.startsWith('client') ? '-client' : ''}`,\n    });\n  };\n\n  return dispatch => {\n    dispatch(setSubmission('status', 'submitPending'));\n    recordEvent({\n      event: `${formConfig.trackingPrefix}-submission`,\n    });\n\n    let promise;\n    if (formConfig.submit) {\n      promise = formConfig.submit(form, formConfig);\n    } else {\n      const body = formConfig.transformForSubmit\n        ? formConfig.transformForSubmit(formConfig, form)\n        : transformForSubmit(formConfig, form);\n\n      promise = submitToUrl(body, formConfig.submitUrl, formConfig.trackingPrefix);\n    }\n\n    return promise\n      .then(resp => dispatch(setSubmitted(resp)))\n      .catch(errorReceived => {\n        // overly cautious\n        const error = errorReceived instanceof Error ? errorReceived : new Error(errorReceived);\n        const errorMessage = String(error.message);\n        let errorType = 'clientError';\n        if (errorMessage.startsWith('vets_throttled_error')) {\n          errorType = 'throttledError';\n        } else if (errorMessage.startsWith('vets_server_error')) {\n          errorType = 'serverError';\n        }\n        captureError(error, errorType);\n        dispatch(setSubmission('status', errorType, error.extra));\n      });\n  };\n}\n\nexport function uploadFile(file, uiOptions, onProgress, onChange, onError) {\n  return (dispatch, getState) => {\n    if (file.size > uiOptions.maxSize) {\n      onChange({\n        name: file.name,\n        errorMessage: 'File is too large to be uploaded'\n      });\n\n      onError();\n      return null;\n    }\n\n    if (file.size < uiOptions.minSize) {\n      onChange({\n        name: file.name,\n        errorMessage: 'File is too small to be uploaded'\n      });\n\n      onError();\n      return null;\n    }\n\n    // we limit file types, but it’s not respected on mobile and desktop\n    // users can bypass it without much effort\n    if (!uiOptions.fileTypes.some(fileType => file.name.toLowerCase().endsWith(fileType.toLowerCase()))) {\n      onChange({\n        name: file.name,\n        errorMessage: 'File is not one of the allowed types'\n      });\n\n      onError();\n      return null;\n    }\n\n    onChange({\n      name: file.name,\n      uploading: true\n    });\n\n    const payload = uiOptions.createPayload(file, getState().form.formId);\n\n    const req = new XMLHttpRequest();\n\n    req.open('POST', uiOptions.fileUploadUrl);\n    req.addEventListener('load', () => {\n      if (req.status >= 200 && req.status < 300) {\n        const body = 'response' in req ? req.response : req.responseText;\n        const fileData = uiOptions.parseResponse(JSON.parse(body), file);\n        onChange(fileData);\n      } else {\n        let errorMessage = req.statusText;\n        if (req.status === 429) {\n          errorMessage = `You’ve reached the limit for the number of submissions we can accept at this time. Please try again in ${timeFromNow(moment.unix(parseInt(req.getResponseHeader('x-ratelimit-reset'), 10)))}.`;\n        }\n\n        onChange({\n          name: file.name,\n          errorMessage\n        });\n        Raven.captureMessage(`vets_upload_error: ${req.statusText}`);\n        onError();\n      }\n    });\n\n    req.addEventListener('error', () => {\n      const errorMessage = 'Network request failed';\n      onChange({\n        name: file.name,\n        errorMessage\n      });\n      Raven.captureMessage(`vets_upload_error: ${errorMessage}`, {\n        extra: {\n          statusText: req.statusText\n        }\n      });\n      onError();\n    });\n\n    req.upload.addEventListener('progress', (evt) => {\n      if (evt.lengthComputable && onProgress) {\n        // setting this at 80, because there's some time after we get to 100%\n        // where the backend is uploading to s3\n        onProgress((evt.loaded / evt.total) * 80);\n      }\n    });\n\n    req.setRequestHeader('X-Key-Inflection', 'camel');\n    req.send(payload);\n\n    return req;\n  };\n}\n"]}