{"version":3,"sources":["../../../src/js/fields/FileField.jsx"],"names":["FileField","props","onAddFile","event","index","target","files","length","formData","idx","uploadRequest","formContext","uploadFile","uiSchema","updateProgress","file","onChange","onAttachmentIdChange","value","onAttachmentNameChange","progress","setState","cancelUpload","abort","removeFile","newFileList","filter","state","newProps","newFiles","idSchema","$id","isUploading","some","uploading","wasUploading","errorSchema","schema","onBlur","uiOptions","maxItems","Infinity","SchemaField","registry","fields","attachmentIdRequired","additionalItems","required","includes","buttonText","addAnotherLabel","reviewMode","undefined","map","errors","hasErrors","itemClasses","itemSchema","items","attachmentIdSchema","attachmentNameSchema","attachmentIdErrors","attachmentNameErrors","name","itemDescription","properties","attachmentId","attachmentSchema","disabled","readonly","attachmentName","e","key","document","getElementById","click","fileTypes","item","join","display","React","Component","propTypes","PropTypes","object","isRequired","requiredSchema","func","array","bool"],"mappings":"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","file":"FileField.js","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport _ from 'lodash/fp';\nimport classNames from 'classnames';\n\nimport ProgressBar from '../components/ProgressBar';\nimport { focusElement } from '../utilities/ui';\n\nexport default class FileField extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: 0\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    const newFiles = newProps.formData || [];\n    const files = this.props.formData || [];\n    if (newFiles.length !== files.length) {\n      focusElement(`#${newProps.idSchema.$id}_add_label`);\n    }\n\n    const isUploading = newFiles.some(file => file.uploading);\n    const wasUploading = files.some(file => file.uploading);\n    if (isUploading && !wasUploading) {\n      this.setState({ progress: 0 });\n    }\n  }\n\n  onAddFile = (event, index = null) => {\n    if (event.target.files && event.target.files.length) {\n      const files = this.props.formData || [];\n      let idx = index;\n      if (idx === null) {\n        idx = files.length === 0 ? 0 : files.length;\n      }\n      this.uploadRequest = this.props.formContext.uploadFile(\n        event.target.files[0],\n        this.props.uiSchema['ui:options'],\n        this.updateProgress,\n        (file) => {\n          this.props.onChange(_.set(idx, file, this.props.formData || []));\n          this.uploadRequest = null;\n        },\n        () => {\n          this.uploadRequest = null;\n        }\n      );\n    }\n  }\n\n  onAttachmentIdChange = (index, value) => {\n    if (!value) {\n      this.props.onChange(_.unset([index, 'attachmentId'], this.props.formData));\n    } else {\n      this.props.onChange(_.set([index, 'attachmentId'], value, this.props.formData));\n    }\n  }\n\n  onAttachmentNameChange = (index, value) => {\n    if (!value) {\n      this.props.onChange(_.unset([index, 'name'], this.props.formData));\n    } else {\n      this.props.onChange(_.set([index, 'name'], value, this.props.formData));\n    }\n  }\n\n  updateProgress = (progress) => {\n    this.setState({ progress });\n  }\n\n  cancelUpload = (index) => {\n    if (this.uploadRequest) {\n      this.uploadRequest.abort();\n    }\n    this.removeFile(index);\n  }\n\n  removeFile = (index) => {\n    const newFileList = this.props.formData.filter((file, idx) => index !== idx);\n    if (!newFileList.length) {\n      this.props.onChange();\n    } else {\n      this.props.onChange(newFileList);\n    }\n  }\n\n  render() {\n    const {\n      uiSchema,\n      errorSchema,\n      idSchema,\n      formData,\n      schema,\n      formContext,\n      onBlur\n    } = this.props;\n\n    const uiOptions = uiSchema['ui:options'];\n    const files = formData || [];\n    const maxItems = schema.maxItems || Infinity;\n    const SchemaField = this.props.registry.fields.SchemaField;\n    const attachmentIdRequired = schema.additionalItems.required\n      ? schema.additionalItems.required.includes('attachmentId')\n      : false;\n\n    const isUploading = files.some(file => file.uploading);\n    let { buttonText = 'Upload' } = uiOptions;\n    if (files.length > 0) buttonText =  uiOptions.addAnotherLabel;\n\n    return (\n      <div className={formContext.reviewMode ? 'schemaform-file-upload-review' : undefined}>\n        {files.length > 0 &&\n          <ul className=\"schemaform-file-list\">\n            {files.map((file, index) => {\n              const errors = _.get([index, '__errors'], errorSchema) || [];\n              const hasErrors = errors.length > 0;\n              const itemClasses = classNames('va-growable-background', {\n                'schemaform-file-error usa-input-error': hasErrors && !file.uploading\n              });\n              const itemSchema = schema.items[index];\n              const attachmentIdSchema = {\n                $id: `${idSchema.$id}_${index}_attachmentId`\n              };\n              const attachmentNameSchema = {\n                $id: `${idSchema.$id}_${index}_attachmentName`\n              };\n              const attachmentIdErrors = _.get([index, 'attachmentId'], errorSchema);\n              const attachmentNameErrors = _.get([index, 'name'], errorSchema);\n\n              return (\n                <li key={index} id={`${idSchema.$id}_file_${index}`} className={itemClasses}>\n                  {file.uploading &&\n                    <div className=\"schemaform-file-uploading\">\n                      <span>{file.name}</span><br/>\n                      <ProgressBar percent={this.state.progress}/>\n                      <button type=\"button\" className=\"va-button-link\" onClick={() => {\n                        this.cancelUpload(index);\n                      }}>\n                        Cancel\n                      </button>\n                    </div>\n                  }\n                  {!file.uploading && <p>{uiOptions.itemDescription}</p>}\n                  {!file.uploading && <span><strong>{file.name}</strong></span>}\n                  {!hasErrors && _.get('properties.attachmentId', itemSchema) &&\n                    <div className=\"schemaform-file-attachment\">\n                      <SchemaField\n                        name=\"attachmentId\"\n                        required={attachmentIdRequired}\n                        schema={itemSchema.properties.attachmentId}\n                        uiSchema={uiOptions.attachmentSchema}\n                        errorSchema={attachmentIdErrors}\n                        idSchema={attachmentIdSchema}\n                        formData={formData[index].attachmentId}\n                        onChange={(value) => this.onAttachmentIdChange(index, value)}\n                        onBlur={onBlur}\n                        registry={this.props.registry}\n                        disabled={this.props.disabled}\n                        readonly={this.props.readonly}/>\n                    </div>}\n                  {!hasErrors && uiOptions.attachmentName &&\n                  <div className=\"schemaform-file-attachment\">\n                    <SchemaField\n                      name=\"attachmentName\"\n                      required\n                      schema={itemSchema.properties.name}\n                      uiSchema={uiOptions.attachmentName}\n                      errorSchema={attachmentNameErrors}\n                      idSchema={attachmentNameSchema}\n                      formData={formData[index].name}\n                      onChange={(value) => this.onAttachmentNameChange(index, value)}\n                      onBlur={onBlur}\n                      registry={this.props.registry}\n                      disabled={this.props.disabled}\n                      readonly={this.props.readonly}/>\n                  </div>}\n                  {!file.uploading && hasErrors && <span className=\"usa-input-error-message\">{errors[0]}</span>}\n                  {!file.uploading && <div>\n                    <button type=\"button\" className=\"va-button-link\" onClick={() => {\n                      this.removeFile(index);\n                    }}>\n                      Delete file\n                    </button>\n                  </div>}\n                </li>\n              );\n            })}\n          </ul>\n        }\n        {(maxItems === null || files.length < maxItems) && !isUploading &&\n          <div>\n            <label\n              role=\"button\"\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  document.getElementById(idSchema.$id).click();\n                }\n              }}\n              tabIndex=\"0\"\n              id={`${idSchema.$id}_add_label`}\n              htmlFor={idSchema.$id}\n              className=\"usa-button usa-button-secondary\">\n              {buttonText}\n            </label>\n            <input\n              type=\"file\"\n              accept={uiOptions.fileTypes.map(item => `.${item}`).join(',')}\n              style={{ display: 'none' }}\n              id={idSchema.$id}\n              name={idSchema.$id}\n              onChange={this.onAddFile}/>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nFileField.propTypes = {\n  schema: PropTypes.object.isRequired,\n  uiSchema: PropTypes.object,\n  errorSchema: PropTypes.object,\n  requiredSchema: PropTypes.object,\n  idSchema: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  formData: PropTypes.array,\n  disabled: PropTypes.bool,\n  readonly: PropTypes.bool\n};\n"]}