{"version":3,"sources":["../../../src/js/fields/ArrayField.jsx"],"names":["Element","Scroll","scroller","ArrayField","props","uiSchema","viewField","Error","idSchema","$id","state","editing","formData","map","item","index","errorSchema","onItemChange","bind","handleAdd","handleEdit","handleUpdate","handleRemove","scrollToTop","scrollToRow","schema","registry","minItems","length","onChange","Array","fill","additionalItems","undefined","definitions","nextProps","nextState","indexToChange","value","newItems","items","setTimeout","scrollTo","window","Forms","scroll","duration","delay","smooth","offset","id","status","setState","touched","formContext","setTouched","lastIndex","newEditing","val","editingState","reviewMode","newState","concat","newFormData","indexToRemove","filter","disabled","readonly","onBlur","fields","TitleField","SchemaField","uiOptions","ViewField","title","hideTitle","description","textDescription","DescriptionField","isReviewMode","hasTitleOrDescription","containerClassNames","itemSchema","getItemSchema","itemIdPrefix","itemIdSchema","isLast","isEditing","notLastOrMultipleRows","itemName","React","Component","propTypes","PropTypes","object","isRequired","requiredSchema","func","array","bool","shape","widgets","objectOf","oneOfType"],"mappings":"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","file":"ArrayField.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport _ from 'lodash/fp';\nimport classNames from 'classnames';\nimport Scroll from 'react-scroll';\n\nimport {\n  toIdSchema,\n  getDefaultFormState,\n  deepEquals\n} from '@department-of-veterans-affairs/react-jsonschema-form/lib/utils';\n\nimport { scrollToFirstError } from '../utilities/ui';\nimport { setArrayRecordTouched } from '../helpers';\nimport { errorSchemaIsValid } from '../validation';\n\nconst Element = Scroll.Element;\nconst scroller = Scroll.scroller;\n\n/* Non-review growable table (array) field */\nexport default class ArrayField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Throw an error if there’s no viewField (should be React component)\n    if (typeof this.props.uiSchema['ui:options'].viewField !== 'function') {\n      throw new Error(`No viewField found in uiSchema for ArrayField ${this.props.idSchema.$id}.`);\n    }\n\n    /*\n     * We’re keeping the editing state in local state because it’s easier to manage and\n     * doesn’t need to persist from page to page\n     */\n\n    this.state = {\n      editing: props.formData\n        ? props.formData.map((item, index) => !errorSchemaIsValid(props.errorSchema[index]))\n        : [true]\n    };\n\n    this.onItemChange = this.onItemChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleRemove = this.handleRemove.bind(this);\n    this.scrollToTop = this.scrollToTop.bind(this);\n    this.scrollToRow = this.scrollToRow.bind(this);\n  }\n\n  // This fills in an empty item in the array if it has minItems set\n  // so that schema validation runs against the fields in the first item\n  // in the array. This shouldn’t be necessary, but there’s a fix in rjsf\n  // that has not been released yet\n  componentDidMount() {\n    const { schema, formData = [], registry } = this.props;\n    if (schema.minItems > 0 && formData.length === 0) {\n      this.props.onChange(Array(schema.minItems).fill(\n        getDefaultFormState(schema.additionalItems, undefined, registry.definitions)\n      ));\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !deepEquals(this.props, nextProps) || nextState !== this.state;\n  }\n\n  onItemChange(indexToChange, value) {\n    const newItems = _.set(indexToChange, value, this.props.formData || []);\n    this.props.onChange(newItems);\n  }\n\n  getItemSchema(index) {\n    const schema = this.props.schema;\n    if (schema.items.length > index) {\n      return schema.items[index];\n    }\n\n    return schema.additionalItems;\n  }\n\n  scrollToTop() {\n    setTimeout(() => {\n      scroller.scrollTo(`topOfTable_${this.props.idSchema.$id}`, window.Forms.scroll || {\n        duration: 500,\n        delay: 0,\n        smooth: true,\n        offset: -60\n      });\n    }, 100);\n  }\n\n  scrollToRow(id) {\n    setTimeout(() => {\n      scroller.scrollTo(`table_${id}`, window.Forms.scroll || {\n        duration: 500,\n        delay: 0,\n        smooth: true,\n        offset: 0\n      });\n    }, 100);\n  }\n\n  /*\n   * Clicking edit on an item that’s not last and so is in view mode\n   */\n  handleEdit(index, status = true) {\n    this.setState(_.set(['editing', index], status, this.state), () => {\n      this.scrollToRow(`${this.props.idSchema.$id}_${index}`);\n    });\n  }\n\n  /*\n   * Clicking Update on an item that’s not last and is in edit mode\n   */\n  handleUpdate(index) {\n    if (errorSchemaIsValid(this.props.errorSchema[index])) {\n      this.setState(_.set(['editing', index], false, this.state), () => {\n        this.scrollToTop();\n      });\n    } else {\n      // Set all the fields for this item as touched, so we show errors\n      const touched = setArrayRecordTouched(this.props.idSchema.$id, index);\n      this.props.formContext.setTouched(touched, () => {\n        scrollToFirstError();\n      });\n    }\n  }\n\n  /*\n   * Clicking Add Another\n   */\n  handleAdd() {\n    const lastIndex = this.props.formData.length - 1;\n    if (errorSchemaIsValid(this.props.errorSchema[lastIndex])) {\n      // When we add another, we want to change the editing state of the currently\n      // last item, but not ones above it\n      const newEditing = this.state.editing.map((val, index) => {\n        return (index + 1) === this.state.editing.length\n          ? false\n          : val;\n      });\n      const editingState = this.props.uiSchema['ui:options'].reviewMode;\n      const newState = _.assign(this.state, {\n        editing: newEditing.concat(!!editingState)\n      });\n      this.setState(newState, () => {\n        const newFormData = this.props.formData.concat(getDefaultFormState(this.props.schema.additionalItems, undefined, this.props.registry.definitions) || {});\n        this.props.onChange(newFormData);\n        this.scrollToRow(`${this.props.idSchema.$id}_${lastIndex + 1}`);\n      });\n    } else {\n      const touched = setArrayRecordTouched(this.props.idSchema.$id, lastIndex);\n      this.props.formContext.setTouched(touched, () => {\n        scrollToFirstError();\n      });\n    }\n  }\n\n  /*\n   * Clicking Remove on an item in edit mode\n   */\n  handleRemove(indexToRemove) {\n    const newItems = this.props.formData.filter((val, index) => index !== indexToRemove);\n    const newState = _.assign(this.state, {\n      editing: this.state.editing.filter((val, index) => index !== indexToRemove),\n    });\n    this.props.onChange(newItems);\n    this.setState(newState, () => {\n      this.scrollToTop();\n    });\n  }\n\n  render() {\n    const {\n      uiSchema,\n      errorSchema,\n      idSchema,\n      formData,\n      disabled,\n      readonly,\n      registry,\n      formContext,\n      onBlur,\n      schema\n    } = this.props;\n    const definitions = registry.definitions;\n    const { TitleField, SchemaField } = registry.fields;\n\n    const uiOptions = uiSchema['ui:options'] || {};\n    const ViewField = uiOptions.viewField;\n    const title = uiSchema['ui:title'] || schema.title;\n    const hideTitle = !!uiOptions.title;\n    const description = uiSchema['ui:description'];\n    const textDescription = typeof description === 'string' ? description : null;\n    const DescriptionField = typeof description === 'function'\n      ? uiSchema['ui:description']\n      : null;\n    const isReviewMode = uiSchema['ui:options'].reviewMode;\n    const hasTitleOrDescription = (!!title && !hideTitle) || !!description;\n\n    // if we have form data, use that, otherwise use an array with a single default object\n    const items = (formData && formData.length)\n      ? formData\n      : [getDefaultFormState(schema, undefined, registry.definitions)];\n\n    const containerClassNames = classNames({\n      'schemaform-field-container': true,\n      'schemaform-block': hasTitleOrDescription\n    });\n\n    return (\n      <div className={containerClassNames}>\n        {hasTitleOrDescription && <div className=\"schemaform-block-header\">\n          {title && !hideTitle\n            ? <TitleField\n              id={`${idSchema.$id}__title`}\n              title={title}\n              formContext={formContext}/> : null}\n          {textDescription && <p>{textDescription}</p>}\n          {DescriptionField && <DescriptionField options={uiSchema['ui:options']}/>}\n          {!textDescription && !DescriptionField && description}\n        </div>}\n        <div className=\"va-growable\">\n          <Element name={`topOfTable_${idSchema.$id}`}/>\n          {items.map((item, index) => {\n            // This is largely copied from the default ArrayField\n            const itemSchema = this.getItemSchema(index);\n            const itemIdPrefix = `${idSchema.$id}_${index}`;\n            const itemIdSchema = toIdSchema(itemSchema, itemIdPrefix, definitions);\n            const isLast = items.length === (index + 1);\n            const isEditing = this.state.editing[index];\n            const notLastOrMultipleRows = !isLast || items.length > 1;\n\n            if (isReviewMode ? isEditing : isLast || isEditing) {\n              return (\n                <div key={index} className={notLastOrMultipleRows ? 'va-growable-background' : null}>\n                  <Element name={`table_${itemIdPrefix}`}/>\n                  <div className=\"row small-collapse\">\n                    <div className=\"small-12 columns va-growable-expanded\">\n                      {isLast && items.length > 1 && uiSchema['ui:options'].itemName\n                        ? <h5>New {uiSchema['ui:options'].itemName}</h5>\n                        : null}\n                      <div className=\"input-section\">\n                        <SchemaField key={index}\n                          schema={itemSchema}\n                          uiSchema={uiSchema.items}\n                          errorSchema={errorSchema ? errorSchema[index] : undefined}\n                          idSchema={itemIdSchema}\n                          formData={item}\n                          onChange={(value) => this.onItemChange(index, value)}\n                          onBlur={onBlur}\n                          registry={this.props.registry}\n                          required={false}\n                          disabled={disabled}\n                          readonly={readonly}/>\n                      </div>\n                      {notLastOrMultipleRows &&\n                        <div className=\"row small-collapse\">\n                          <div className=\"small-6 left columns\">\n                            {!isLast && <button className=\"float-left\" onClick={() => this.handleUpdate(index)}>Update</button>}\n                          </div>\n                          <div className=\"small-6 right columns\">\n                            <button className=\"usa-button-secondary float-right\" type=\"button\" onClick={() => this.handleRemove(index)}>Remove</button>\n                          </div>\n                        </div>}\n                    </div>\n                  </div>\n                </div>\n              );\n            }\n            return (\n              <div key={index} className=\"va-growable-background\">\n                <div className=\"row small-collapse\">\n                  <div className=\"small-9 columns\">\n                    <ViewField\n                      formData={item}\n                      onEdit={() => this.handleEdit(index)}/>\n                  </div>\n                  <div className=\"small-3 columns\">\n                    <button className=\"usa-button-secondary float-right\" onClick={() => this.handleEdit(index)}>Edit</button>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          <button\n            type=\"button\"\n            className={classNames(\n              'usa-button-secondary',\n              'va-growable-add-btn',\n              {\n                'usa-button-disabled': !this.props.formData\n              }\n            )}\n            disabled={!this.props.formData}\n            onClick={this.handleAdd}>\n            Add Another {uiOptions.itemName}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nArrayField.propTypes = {\n  schema: PropTypes.object.isRequired,\n  uiSchema: PropTypes.object,\n  errorSchema: PropTypes.object,\n  requiredSchema: PropTypes.object,\n  idSchema: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  formData: PropTypes.array,\n  disabled: PropTypes.bool,\n  readonly: PropTypes.bool,\n  registry: PropTypes.shape({\n    widgets: PropTypes.objectOf(PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n    ])).isRequired,\n    fields: PropTypes.objectOf(PropTypes.func).isRequired,\n    definitions: PropTypes.object.isRequired,\n    formContext: PropTypes.object.isRequired,\n  })\n};\n"]}