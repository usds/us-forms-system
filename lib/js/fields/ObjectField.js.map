{"version":3,"sources":["../../../src/js/fields/ObjectField.jsx"],"names":["setFirstFields","id","containers","document","concat","Array","from","querySelectorAll","forEach","fields","block","length","classList","add","ObjectField","props","state","getStateFromProps","onPropertyChange","bind","onPropertyBlur","isRequired","SchemaField","registry","orderedProperties","orderAndFilterProperties","schema","uiSchema","idSchema","$id","nextProps","name","value","formData","Object","keys","undefined","definitions","onChange","path","onBlur","properties","filteredProperties","filter","prop","groupedProperties","item","expandUnderField","schemaRequired","isArray","required","indexOf","errorSchema","disabled","readonly","formContext","TitleField","uiOptions","showFieldLabel","fieldsetClassNames","classNames","title","CustomTitleField","description","textDescription","DescriptionField","hasTitleOrDescription","isRoot","containerClassNames","renderProp","propName","fieldContent","map","objectFields","index","first","rest","visible","React","Component","defaultProps","propTypes","PropTypes","object","func","bool","shape","widgets","objectOf","oneOfType"],"mappings":"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","file":"ObjectField.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport _ from 'lodash/fp';\n\nimport {\n  deepEquals,\n  getDefaultFormState,\n  orderProperties,\n  getDefaultRegistry\n} from '@department-of-veterans-affairs/react-jsonschema-form/lib/utils';\n\nimport ExpandingGroup from '../components/ExpandingGroup';\nimport { pureWithDeepEquals } from '../helpers';\n\n/*\n * This is largely copied from the react-jsonschema-form library,\n * but with the way descriptions are used changed\n */\n\n/*\n * Add a first field class to the first actual field on the page\n * and on any \"blocks\", which are titled sections of the page\n */\nfunction setFirstFields(id) {\n  if (id === 'root') {\n    const containers = [document].concat(\n      Array.from(document.querySelectorAll('.schemaform-block'))\n    );\n    containers.forEach(block => {\n      const fields = Array.from(block.querySelectorAll('.form-checkbox,.schemaform-field-template'));\n      if (fields.length) {\n        fields[0].classList.add('schemaform-first-field');\n      }\n    });\n  }\n}\n\nclass ObjectField extends React.Component {\n  static defaultProps = {\n    uiSchema: {},\n    errorSchema: {},\n    idSchema: {},\n    registry: getDefaultRegistry(),\n    required: false,\n    disabled: false,\n    readonly: false,\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = this.getStateFromProps(props);\n    this.onPropertyChange = this.onPropertyChange.bind(this);\n    this.onPropertyBlur = this.onPropertyBlur.bind(this);\n    this.isRequired = this.isRequired.bind(this);\n    this.SchemaField = pureWithDeepEquals(this.props.registry.fields.SchemaField);\n    this.orderedProperties = this.orderAndFilterProperties(props.schema, props.uiSchema);\n  }\n\n  componentDidMount() {\n    setFirstFields(this.props.idSchema.$id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.schema !== nextProps.schema || this.props.uiSchema !== nextProps.uiSchema) {\n      this.orderedProperties = this.orderAndFilterProperties(nextProps.schema, nextProps.uiSchema);\n    }\n  }\n\n  /*\n   * This is a performance optimization to avoid extra renders. Because we mirror\n   * formData in local state, each form data change will trigger two renders: one when\n   * local state is updated and another when that change is reflected in formData. This check\n   * skips the second render if no other props or state has changed\n   */\n  shouldComponentUpdate(nextProps) {\n    return !deepEquals(this.props, nextProps);\n  }\n\n  componentDidUpdate() {\n    setFirstFields(this.props.idSchema.$id);\n  }\n\n  onPropertyChange(name) {\n    return (value) => {\n      const formData = Object.keys(this.props.formData || {}).length\n        ? this.props.formData\n        : getDefaultFormState(this.props.schema, undefined, this.props.registry.definitions);\n      this.props.onChange(_.set(name, value, formData));\n    };\n  }\n\n  onPropertyBlur(name) {\n    return (path = []) => {\n      this.props.onBlur([name].concat(path));\n    };\n  }\n\n  getStateFromProps(props) {\n    const { schema, formData, registry } = props;\n    return getDefaultFormState(schema, formData, registry.definitions) || {};\n  }\n\n  // This runs a series of steps that order properties and then group them into\n  // expandable groups. If there are no expandable groups, then the end result of this\n  // will be an array of single item arrays\n  orderAndFilterProperties(schema, uiSchema) {\n    const properties = Object.keys(schema.properties);\n    const orderedProperties = orderProperties(properties, _.get('ui:order', uiSchema));\n    const filteredProperties = orderedProperties.filter(prop => !schema.properties[prop]['ui:hidden']);\n    const groupedProperties = _.groupBy((item) => {\n      const expandUnderField = _.get([item, 'ui:options', 'expandUnder'], uiSchema);\n      return expandUnderField || item;\n    }, filteredProperties);\n\n    return _.values(groupedProperties);\n  }\n\n  isRequired(name) {\n    const { schema } = this.props;\n    const schemaRequired = Array.isArray(schema.required) &&\n      schema.required.indexOf(name) !== -1;\n\n    if (schemaRequired) {\n      return schemaRequired;\n    }\n\n    return false;\n  }\n\n  render() {\n    const {\n      uiSchema,\n      errorSchema,\n      idSchema,\n      schema,\n      required,\n      disabled,\n      readonly,\n      onBlur\n    } = this.props;\n    const { definitions, fields, formContext } = this.props.registry;\n    const { TitleField } = fields;\n    const SchemaField = this.SchemaField;\n    const formData = Object.keys(this.props.formData || {}).length\n      ? this.props.formData\n      : getDefaultFormState(schema, {}, definitions);\n    const uiOptions = uiSchema['ui:options'] || {};\n\n    // description and title setup\n    const showFieldLabel = uiOptions.showFieldLabel;\n    const fieldsetClassNames = uiOptions.classNames;\n    const title = uiSchema['ui:title'] || schema.title;\n    const CustomTitleField = typeof title === 'function'\n      ? title\n      : null;\n\n    const description = uiSchema['ui:description'];\n    const textDescription = typeof description === 'string' ? description : null;\n    const DescriptionField = typeof description === 'function'\n      ? uiSchema['ui:description']\n      : null;\n\n    const hasTitleOrDescription = !!title || !!description;\n    const isRoot = idSchema.$id === 'root';\n\n    const containerClassNames = classNames({\n      'input-section': isRoot,\n      'schemaform-field-container': true,\n      'schemaform-block': title && !isRoot\n    });\n\n    const renderProp = (propName) => {\n      return (\n        <div key={propName}>\n          <SchemaField\n            name={propName}\n            required={this.isRequired(propName)}\n            schema={schema.properties[propName]}\n            uiSchema={uiSchema[propName]}\n            errorSchema={errorSchema[propName]}\n            idSchema={idSchema[propName]}\n            formData={formData[propName]}\n            onChange={this.onPropertyChange(propName)}\n            onBlur={onBlur}\n            registry={this.props.registry}\n            disabled={disabled}\n            readonly={readonly}/>\n        </div>\n      );\n    };\n\n    const fieldContent = (\n      <div className={containerClassNames}>\n        {hasTitleOrDescription && <div className=\"schemaform-block-header\">\n          {CustomTitleField && !showFieldLabel\n            ? <CustomTitleField\n              id={`${idSchema.$id}__title`}\n              formData={formData}\n              formContext={formContext}\n              required={required}/> : null}\n          {!CustomTitleField && title && !showFieldLabel\n            ? <TitleField\n              id={`${idSchema.$id}__title`}\n              title={title}\n              required={required}\n              formContext={formContext}/> : null}\n          {textDescription && <p>{textDescription}</p>}\n          {DescriptionField && <DescriptionField formData={formData} formContext={formContext} options={uiSchema['ui:options']}/>}\n          {!textDescription && !DescriptionField && description}\n        </div>}\n        {this.orderedProperties.map((objectFields, index) => {\n          if (objectFields.length > 1) {\n            const [first, ...rest] = objectFields;\n            const visible = rest.filter(prop => !_.get(['properties', prop, 'ui:collapsed'], schema));\n            return (\n              <ExpandingGroup open={visible.length > 0} key={index}>\n                {renderProp(first)}\n                <div className={_.get([first, 'ui:options', 'expandUnderClassNames'], uiSchema)}>\n                  {visible.map(renderProp)}\n                </div>\n              </ExpandingGroup>\n            );\n          }\n\n          // if fields have expandUnder, but are the only item, that means the\n          // field they’re expanding under is hidden, and they should be hidden, too\n          return !_.get([objectFields[0], 'ui:options', 'expandUnder'], uiSchema)\n            ? renderProp(objectFields[0], index)\n            : undefined;\n        })\n        }\n      </div>\n    );\n\n    if (title) {\n      return (\n        <fieldset className={fieldsetClassNames}>\n          {fieldContent}\n        </fieldset>\n      );\n    }\n\n    return (\n      <div className={fieldsetClassNames}>\n        {fieldContent}\n      </div>\n    );\n  }\n}\n\nObjectField.propTypes = {\n  schema: PropTypes.object.isRequired,\n  uiSchema: PropTypes.object,\n  errorSchema: PropTypes.object,\n  idSchema: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n  formData: PropTypes.object,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  readonly: PropTypes.bool,\n  registry: PropTypes.shape({\n    widgets: PropTypes.objectOf(PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.object,\n    ])).isRequired,\n    fields: PropTypes.objectOf(PropTypes.func).isRequired,\n    definitions: PropTypes.object.isRequired,\n    formContext: PropTypes.object.isRequired,\n  })\n};\n\nexport default ObjectField;\n"]}