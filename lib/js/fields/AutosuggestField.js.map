{"version":3,"sources":["../../../src/js/fields/AutosuggestField.jsx"],"names":["ESCAPE_KEY","getInput","input","uiSchema","schema","widget","label","uiOptions","labels","index","enum","indexOf","enumNames","AutosuggestField","props","formData","options","suggestions","getOptions","useEnum","map","id","getSuggestions","debounceRate","undefined","debouncedGetOptions","state","formContext","reviewMode","unmounted","cancel","idSchema","$id","readOnlyData","type","handleChange","handleInputValueChange","handleBlur","item","getInputProps","getItemProps","isOpen","selectedItem","highlightedIndex","name","className","onBlur","onKeyDown","handleKeyDown","React","Component","inputValue","then","setOptions","setState","value","slice","maxOptions","getFormData","suggestion","freeInput","queryForResults","length","matchingItem","find","onChange","event","keyCode"],"mappings":"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","file":"AutosuggestField.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash/fp';\nimport Downshift from 'downshift';\nimport classNames from 'classnames';\n\nimport debounce from '../utilities/data/debounce';\nimport sortListByFuzzyMatch from '../utilities/fuzzy-matching';\n\nconst ESCAPE_KEY = 27;\n\nfunction getInput(input, uiSchema, schema) {\n  if (input && input.widget === 'autosuggest') {\n    return input.label;\n  }\n\n  if (typeof input !== 'object' && input) {\n    const uiOptions = uiSchema['ui:options'];\n    // When using this field in an array item, editing the item will throw an error\n    //  if there uiOptions.label is undefined (as when we queryForResults), so we\n    //  have to have this safety valve\n    if (!uiOptions.labels) {\n      return input;\n    }\n\n    if (uiOptions.labels[input]) {\n      return uiOptions.labels[input];\n    }\n\n    const index = schema.enum.indexOf(input) >= 0;\n    if (schema.enumNames && index >= 0) {\n      return uiOptions.labels[input] || schema.enumNames[index];\n    }\n  }\n\n  return '';\n}\n\nexport default class AutosuggestField extends React.Component {\n  constructor(props) {\n    super(props);\n    const { uiSchema, schema, formData } = props;\n    const input = getInput(formData, uiSchema, schema);\n    const uiOptions = uiSchema['ui:options'];\n\n    let options = [];\n    let suggestions = [];\n\n    if (!uiOptions.getOptions) {\n      this.useEnum = true;\n      options = schema.enum.map((id, index) => {\n        return {\n          id,\n          label: uiOptions.labels[id] || schema.enumNames[index]\n        };\n      });\n      suggestions = this.getSuggestions(options, input);\n    }\n\n    const debounceRate = uiOptions.debounceRate === undefined ? 1000 : uiOptions.debounceRate;\n    this.debouncedGetOptions = debounce(debounceRate, this.getOptions);\n\n    this.state = {\n      options,\n      input,\n      suggestions\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.formContext.reviewMode) {\n      this.getOptions();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.debouncedGetOptions.cancel();\n  }\n\n  getOptions = (inputValue) => {\n    const getOptions = this.props.uiSchema['ui:options'].getOptions;\n    if (getOptions) {\n      getOptions(inputValue).then(this.setOptions);\n    }\n  }\n\n  setOptions = (options) => {\n    if (!this.unmounted) {\n      this.setState({ options, suggestions: this.getSuggestions(options, this.state.input) });\n    }\n  }\n\n  getSuggestions = (options, value) => {\n    if (value) {\n      const uiOptions = this.props.uiSchema['ui:options'];\n      return sortListByFuzzyMatch(value, options).slice(0, uiOptions.maxOptions);\n    }\n\n    return options;\n  }\n\n  getFormData = (suggestion) => {\n    if (this.useEnum) {\n      return suggestion.id;\n    }\n\n    // When freeInput is true, we'll return the label to the api instead of the id\n    if (this.props.uiSchema['ui:options'].freeInput) {\n      return suggestion.label;\n    }\n\n    return _.set('widget', 'autosuggest', suggestion);\n  }\n\n  handleInputValueChange = (inputValue) => {\n    if (inputValue !== this.state.input) {\n      const uiOptions = this.props.uiSchema['ui:options'];\n      if (uiOptions.queryForResults) {\n        this.debouncedGetOptions(inputValue);\n      }\n\n      let item = { widget: 'autosuggest', label: inputValue };\n      // once the input is long enough, check for exactly matching strings so that we don't\n      // force a user to click on an item when they've typed an exact match of a label\n      if (inputValue && inputValue.length > 3) {\n        const matchingItem = this.state.suggestions.find(suggestion => suggestion.label === inputValue);\n        if (matchingItem) {\n          item = this.getFormData(matchingItem);\n        }\n      }\n\n      this.props.onChange((this.props.uiSchema['ui:options'].freeInput || this.useEnum) ? inputValue : item);\n      this.setState({\n        input: inputValue,\n        suggestions: this.getSuggestions(this.state.options, inputValue)\n      });\n    } else if (inputValue === '') {\n      this.props.onChange();\n      this.setState({\n        input: inputValue,\n        suggestions: this.getSuggestions(this.state.options, inputValue)\n      });\n    }\n  }\n\n  handleChange = (selectedItem) => {\n    const value = this.getFormData(selectedItem);\n    this.props.onChange(value);\n    if (this.state.input !== selectedItem.label) {\n      this.setState({\n        input: selectedItem.label,\n      });\n    }\n  }\n\n  handleKeyDown = (event) => {\n    if (event.keyCode === ESCAPE_KEY) {\n      this.setState({ input: '' });\n    }\n  }\n\n  handleBlur = () => {\n    this.props.onBlur(this.props.idSchema.$id);\n  }\n\n  render() {\n    const { idSchema, formContext, formData, uiSchema, schema } = this.props;\n    const id = idSchema.$id;\n\n    if (formContext.reviewMode) {\n      const readOnlyData = <span>{getInput(formData, uiSchema, schema)}</span>;\n\n      // If this is an non-object field then the label will\n      // be included by ReviewFieldTemplate\n      if (schema.type !== 'object') {\n        return readOnlyData;\n      }\n\n      return (\n        <div className=\"review-row\">\n          <dt>{this.props.uiSchema['ui:title']}</dt>\n          <dd>{readOnlyData}</dd>\n        </div>\n      );\n    }\n\n    return (\n      <Downshift\n        onChange={this.handleChange}\n        onInputValueChange={this.handleInputValueChange}\n        inputValue={this.state.input}\n        selectedItem={this.state.input}\n        onOuterClick={this.handleBlur}\n        itemToString={item => {\n          if (typeof item === 'string') {\n            return item;\n          }\n\n          return item.label;\n        }}\n        render={({\n          getInputProps,\n          getItemProps,\n          isOpen,\n          selectedItem,\n          highlightedIndex\n        }) => (\n          <div className=\"autosuggest-container\">\n            <input {...getInputProps({\n              id,\n              name: id,\n              className: 'autosuggest-input',\n              onBlur: isOpen ? undefined : this.handleBlur,\n              onKeyDown: this.handleKeyDown\n            })}/>\n            {isOpen && (\n              <div className=\"autosuggest-list\" role=\"listbox\">\n                {this.state.suggestions\n                  .map((item, index) => (\n                    <div\n                      {...getItemProps({ item })}\n                      role=\"option\"\n                      aria-selected={selectedItem === item.label ? 'true' : 'false'}\n                      className={classNames('autosuggest-item', {\n                        'autosuggest-item-highlighted': highlightedIndex === index,\n                        'autosuggest-item-selected': selectedItem === item.label\n                      })}\n                      key={item.id}>\n                      {item.label}\n                    </div>\n                  ))}\n              </div>\n            )}\n          </div>\n        )}>\n      </Downshift>\n    );\n  }\n}\n"]}